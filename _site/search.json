[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "quartoblog",
    "section": "",
    "text": "sports\n\n\n\n\n\n\n\n\n\n\n\nAug 12, 2022\n\n\nDerek Sollberger\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nbaseball\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nDerek Sollberger\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nfonts\n\n\n\n\n\n\n\n\n\n\n\nAug 15, 2022\n\n\nDerek Sollberger\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nvisualization\n\n\n\n\n\n\n\n\n\n\n\nAug 14, 2022\n\n\nDerek Sollberger\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexploratory data analysis\n\n\n\n\n\n\n\n\n\n\n\nAug 12, 2022\n\n\nDerek Sollberger\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nquarto\n\n\n\n\n\n\n\n\n\n\n\nAug 12, 2022\n\n\nDerek Sollberger\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Today I followed Albert Rapp’s guide to creating a Quarto blog.\nFor me, it was a matter of making\n\na GitHub repository, called it quartoblog, and cloned it to my computer\ndeleted the quartoblog folder on my computer\nstarted a new project in RStudio to select Quarto web site (note that Quarto is already bundled in newer versions of the RStudio IDE)\ngot Netlify and GitHub to play nicely with each other and share the quartoblog repository\nupdated my domain redirect to the Netlify site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/bump/bump.html",
    "href": "posts/bump/bump.html",
    "title": "Bump",
    "section": "",
    "text": "library(\"ggbump\")\nlibrary(\"Lahman\")\nlibrary(\"tidyverse\")\n\nFor today’s easy foray, let us seek out the wins and losses of teams in the Teams data frame (I tend to call my data frames df for typing ease).\n\ndf <- Teams\n\nThere are about 3000 observations and 48 variables. I will need some of the column names.\n\ncolnames(df)\n\n [1] \"yearID\"         \"lgID\"           \"teamID\"         \"franchID\"      \n [5] \"divID\"          \"Rank\"           \"G\"              \"Ghome\"         \n [9] \"W\"              \"L\"              \"DivWin\"         \"WCWin\"         \n[13] \"LgWin\"          \"WSWin\"          \"R\"              \"AB\"            \n[17] \"H\"              \"X2B\"            \"X3B\"            \"HR\"            \n[21] \"BB\"             \"SO\"             \"SB\"             \"CS\"            \n[25] \"HBP\"            \"SF\"             \"RA\"             \"ER\"            \n[29] \"ERA\"            \"CG\"             \"SHO\"            \"SV\"            \n[33] \"IPouts\"         \"HA\"             \"HRA\"            \"BBA\"           \n[37] \"SOA\"            \"E\"              \"DP\"             \"FP\"            \n[41] \"name\"           \"park\"           \"attendance\"     \"BPF\"           \n[45] \"PPF\"            \"teamIDBR\"       \"teamIDlahman45\" \"teamIDretro\"   \n\n\nTo make a quick exploration, let us filter for the past 10 seasons of baseball (2012 to 2021) and select the columns I will use later.\n\ndf <- Teams |>\n  filter(yearID >= 2012) |>\n  select(yearID, lgID, franchID, divID, Rank)\nhead(df)\n\n  yearID lgID franchID divID Rank\n1   2012   NL      ARI     W    3\n2   2012   NL      ATL     E    2\n3   2012   AL      BAL     E    2\n4   2012   AL      BOS     E    5\n5   2012   AL      CHW     C    2\n6   2012   NL      CHC     C    5\n\n\nTo be honest, I thought I was going to have to code up some function to rank team wins within the MLB divisions, but the Lahman database already has that!\n\ndf_left <- df |> filter(yearID == 2012 & lgID == \"NL\")\ndf_right <- df |> filter(yearID == 2021 & lgID == \"NL\")\n\n\ndf |>\n  filter(lgID == \"NL\") |>\n  ggplot(aes(x = yearID, y = -Rank, color = franchID)) +\n  geom_bump(size = 2) +\n  geom_point(aes(x = yearID, y = -Rank, color = franchID),\n             size = 5) +\n  geom_label(aes(x = yearID, y = -Rank, label = franchID), data = df_left) +\n  geom_label(aes(x = yearID, y = -Rank, label = franchID), data = df_right) +\n  facet_wrap(. ~ divID, ncol = 1) +\n  labs(title = \"National League Standings\",\n       subtitle = \"early draft of bump plot\",\n       caption = \"Derek Sollberger\") +\n  theme(legend.position = \"none\",\n        panel.background = element_blank())\n\nWarning in f(...): 'StatBump' needs at least two observations per group\n\n\n\n\n\n\n\n\nbump plot"
  },
  {
    "objectID": "posts/typewriter/typewriter.html",
    "href": "posts/typewriter/typewriter.html",
    "title": "Typewriter",
    "section": "",
    "text": "library(\"gt\")\n\n\ndf <- data.frame(\n  Period = c(\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\"),\n  Course = c(\"Academic Decathlon\", \"Spanish 4 AP\", \"Calculus AP BC\", \"English 3 Honors\", \"Computer Applications\", \"Physics AP\", \"US History\")\n)\n\n\n# https://gt.rstudio.com/reference/cell_borders.html\ndf |>\n  gt() |>\n  tab_options(\n    # table.background.color = \"#E8EBE6\",\n    table.font.names = \"Courier New\"\n  ) |>\n  tab_style(\n    locations = cells_body(\n      columns = everything(),\n      rows = everything()\n    ),\n    style = list(\n      cell_borders(\n        sides = c(\"top\", \"bottom\"),\n        color = \"cyan\",\n        style = \"solid\"\n      ),\n      cell_fill(color = \"#E8EBE6\") #https://www.crispedge.com/color/e8ebe6/\n    )\n  ) |>\n  tab_style(\n    locations = cells_body(\n      columns = \"Course\",\n      rows = everything()\n    ),\n    style = list(\n      cell_borders(\n        sides = c(\"left\"),\n        color = \"red\",\n        style = \"solid\"\n      ),\n      cell_fill(color = \"#E8EBE6\")\n    )\n  )\n\n\n\n\n\n  \n  \n    \n      Period\n      Course\n    \n  \n  \n    0\nAcademic Decathlon\n    1\nSpanish 4 AP\n    2\nCalculus AP BC\n    3\nEnglish 3 Honors\n    4\nComputer Applications\n    5\nPhysics AP\n    6\nUS History\n  \n  \n  \n\n\n\n\n\n\n\nhigh school junior year schedule"
  },
  {
    "objectID": "posts/overviewR/overviewR.html",
    "href": "posts/overviewR/overviewR.html",
    "title": "overviewR",
    "section": "",
    "text": "cheat sheet: https://github.com/cosimameyer/overviewR/blob/master/man/figures/CheatSheet_overviewR.pdf\n\n\nlibrary(\"overviewR\")\nlibrary(\"palmerpenguins\")\n\nAt this moment, I misread what overviewR does (I thought it would summarize everything). Instead, I will just try out one tool for now.\n\npenguins_raw |>\n  overview_na()"
  },
  {
    "objectID": "posts/oblicubes/oblicubes.html",
    "href": "posts/oblicubes/oblicubes.html",
    "title": "Oblicubes",
    "section": "",
    "text": "https://github.com/trevorld/oblicubes\n\n\nlibrary(\"bittermelon\")\n\n\nAttaching package: 'bittermelon'\n\n\nThe following object is masked from 'package:base':\n\n    which\n\nlibrary(\"grid\")\nlibrary(\"oblicubes\")\n\n\n# example from\n# https://github.com/trevorld/oblicubes\nfont_file <- system.file(\"fonts/spleen/spleen-8x16.hex.gz\", package = \"bittermelon\")\nfont <- read_hex(font_file)\nbml <- as_bm_list(\"RSTATS\", font = font)\n# Add a shadow effect and border\nbm <- (3 * bml) |>\n  bm_pad(sides = 2L) |>\n  bm_shadow(value = 2L) |>\n  bm_call(cbind) |>\n  bm_extend(sides = 1L, value = 1L)\ncol <- apply(bm + 1L, c(1, 2), function(i) {\n  switch(i, \"white\", \"grey20\", \"lightblue\", \"darkblue\")\n})\ncoords <- xyz_heightmap(bm, col = col, flipy=FALSE)\ngrid.oblicubes(coords, width=unit(2.2, \"mm\"))\n\n\n\n\n\n# Bio 18\nbml <- as_bm_list(\"BIO 18\", font = font)\n\nbm <- (3 * bml) |>\n  bm_pad(sides = 2L) |>\n  bm_shadow(value = 2L) |>\n  bm_call(cbind) |>\n  bm_extend(sides = 1L, value = 1L)\ncol <- apply(bm + 1L, c(1, 2), function(i) {\n  switch(i, \"white\", \"#5b5b5b\", \"#DAA900\", \"#002856\")\n  # switch(i, \"#DAA900\", \"#5b5b5b\", \"#0091b3\", \"#002856\")\n})\ncoords <- xyz_heightmap(bm, col = col, flipy=FALSE)\ngrid.oblicubes(coords, width=unit(2.2, \"mm\"))\n\n\n\n\n\n# Math 32\nbml <- as_bm_list(\"MATH32\", font = font)\n\nbm <- (3 * bml) |>\n  bm_pad(sides = 2L) |>\n  bm_shadow(value = 2L) |>\n  bm_call(cbind) |>\n  bm_extend(sides = 1L, value = 1L)\ncol <- apply(bm + 1L, c(1, 2), function(i) {\n  switch(i, \"white\", \"#5b5b5b\", \"#DAA900\", \"#002856\")\n  # switch(i, \"#DAA900\", \"#5b5b5b\", \"#0091b3\", \"#002856\")\n})\ncoords <- xyz_heightmap(bm, col = col, flipy=FALSE)\ngrid.oblicubes(coords, width=unit(2.2, \"mm\"))\n\n\n\n\n\n# Spark\nbml <- as_bm_list(\"SPORTS\", font = font)\n\nbm <- (3 * bml) |>\n  bm_pad(sides = 2L) |>\n  bm_shadow(value = 2L) |>\n  bm_call(cbind) |>\n  bm_extend(sides = 1L, value = 1L)\ncol <- apply(bm + 1L, c(1, 2), function(i) {\n  switch(i, \"white\", \"#5b5b5b\", \"#DAA900\", \"#002856\")\n  # switch(i, \"#DAA900\", \"#5b5b5b\", \"#0091b3\", \"#002856\")\n})\ncoords <- xyz_heightmap(bm, col = col, flipy=FALSE)\ngrid.oblicubes(coords, width=unit(2.2, \"mm\"))\n\n\n\n\nand then I cropped an resized each image to 262 by 146 pixels\n\nhttps://unomaha.instructure.com/courses/33506/pages/create-a-canvas-dashboard-image-for-your-course"
  },
  {
    "objectID": "posts/oblicubes.html",
    "href": "posts/oblicubes.html",
    "title": "Oblicubes",
    "section": "",
    "text": "https://github.com/trevorld/oblicubes\n\n\nlibrary(\"bittermelon\")\n\n\nAttaching package: 'bittermelon'\n\n\nThe following object is masked from 'package:base':\n\n    which\n\nlibrary(\"grid\")\nlibrary(\"oblicubes\")\n\n\n# example from\n# https://github.com/trevorld/oblicubes\nfont_file <- system.file(\"fonts/spleen/spleen-8x16.hex.gz\", package = \"bittermelon\")\nfont <- read_hex(font_file)\nbml <- as_bm_list(\"RSTATS\", font = font)\n# Add a shadow effect and border\nbm <- (3 * bml) |>\n  bm_pad(sides = 2L) |>\n  bm_shadow(value = 2L) |>\n  bm_call(cbind) |>\n  bm_extend(sides = 1L, value = 1L)\ncol <- apply(bm + 1L, c(1, 2), function(i) {\n  switch(i, \"white\", \"grey20\", \"lightblue\", \"darkblue\")\n})\ncoords <- xyz_heightmap(bm, col = col, flipy=FALSE)\ngrid.oblicubes(coords, width=unit(2.2, \"mm\"))\n\n\n\n\n\n# Bio 18\nbml <- as_bm_list(\"BIO 18\", font = font)\n\nbm <- (3 * bml) |>\n  bm_pad(sides = 2L) |>\n  bm_shadow(value = 2L) |>\n  bm_call(cbind) |>\n  bm_extend(sides = 1L, value = 1L)\ncol <- apply(bm + 1L, c(1, 2), function(i) {\n  switch(i, \"white\", \"#5b5b5b\", \"#DAA900\", \"#002856\")\n  # switch(i, \"#DAA900\", \"#5b5b5b\", \"#0091b3\", \"#002856\")\n})\ncoords <- xyz_heightmap(bm, col = col, flipy=FALSE)\ngrid.oblicubes(coords, width=unit(2.2, \"mm\"))\n\n\n\n\n\n# Math 32\nbml <- as_bm_list(\"MATH32\", font = font)\n\nbm <- (3 * bml) |>\n  bm_pad(sides = 2L) |>\n  bm_shadow(value = 2L) |>\n  bm_call(cbind) |>\n  bm_extend(sides = 1L, value = 1L)\ncol <- apply(bm + 1L, c(1, 2), function(i) {\n  switch(i, \"white\", \"#5b5b5b\", \"#DAA900\", \"#002856\")\n  # switch(i, \"#DAA900\", \"#5b5b5b\", \"#0091b3\", \"#002856\")\n})\ncoords <- xyz_heightmap(bm, col = col, flipy=FALSE)\ngrid.oblicubes(coords, width=unit(2.2, \"mm\"))\n\n\n\n\n\n# Spark\nbml <- as_bm_list(\"SPORTS\", font = font)\n\nbm <- (3 * bml) |>\n  bm_pad(sides = 2L) |>\n  bm_shadow(value = 2L) |>\n  bm_call(cbind) |>\n  bm_extend(sides = 1L, value = 1L)\ncol <- apply(bm + 1L, c(1, 2), function(i) {\n  switch(i, \"white\", \"#5b5b5b\", \"#DAA900\", \"#002856\")\n  # switch(i, \"#DAA900\", \"#5b5b5b\", \"#0091b3\", \"#002856\")\n})\ncoords <- xyz_heightmap(bm, col = col, flipy=FALSE)\ngrid.oblicubes(coords, width=unit(2.2, \"mm\"))"
  },
  {
    "objectID": "posts/intentional_walks/ibb.html",
    "href": "posts/intentional_walks/ibb.html",
    "title": "Intentional Walks",
    "section": "",
    "text": "Today’s exploration and visualization practive was inspired by this tweet:\n“Barry Bonds has over 200 more intentional walks than the Rays entire franchise.” — Cespedes Family BBQ, Dec. 2, 2013\n“Almost nine years later and Bonds still has 28 more intentional walks than the Rays franchise.” — Jim Passon, Aug. 25, 2022"
  },
  {
    "objectID": "posts/intentional_walks/ibb.html#gathering-the-data",
    "href": "posts/intentional_walks/ibb.html#gathering-the-data",
    "title": "Intentional Walks",
    "section": "Gathering the Data",
    "text": "Gathering the Data\nAt first, I thought that I could reasonably type in all of the data, but Bonds’ career was quite long. I copy-and-pasted the batting table from Baseball Reference and focused on the Year and IBB columns.\nThe franchise page for the Tampa Bay Rays did not have intentional walks quickly accessible, so I simply went through the year-by-year pages and gathered the IBB total (fortunately easy to find visually as the last column).\n\ndf_bonds <- readxl::read_xlsx(\"ibb.xlsx\", sheet = \"Bonds\")\ndf_rays  <- readxl::read_xlsx(\"ibb.xlsx\", sheet = \"Rays\")"
  },
  {
    "objectID": "posts/intentional_walks/ibb.html#data-wrangling",
    "href": "posts/intentional_walks/ibb.html#data-wrangling",
    "title": "Intentional Walks",
    "section": "Data Wrangling",
    "text": "Data Wrangling\nWhile I could probably affect the horizontal axis later in a ggplot visualization, I prefer today to have the data in one data frame. Let me merge the data.\n\ndf <- df_bonds |>\n  full_join(df_rays, by = \"Year\") |>\n  rename(\"IBB_Bonds\" = \"IBB.x\",\n        \"IBB_Rays\" = \"IBB.y\")\n\nThe naturally missing values probably would not affect the calculations much, but for peace of mind, let us impute those values to be zeroes.\n\ndf$IBB_Bonds[is.na(df$IBB_Bonds)] <- 0\ndf$IBB_Rays[is.na(df$IBB_Rays)]   <- 0\n\nIn the spirit of the tweet, we will need to talk about cumulative totals.\n\ndf <- df |>\n  mutate(IBB_Bonds_total = cumsum(IBB_Bonds),\n         IBB_Rays_total  = cumsum(IBB_Rays))"
  },
  {
    "objectID": "posts/intentional_walks/ibb.html#data-visualization",
    "href": "posts/intentional_walks/ibb.html#data-visualization",
    "title": "Intentional Walks",
    "section": "Data Visualization",
    "text": "Data Visualization\nWhile line graphs (with areas filled) would probably be the most visually appealing, it might be better to treat seasons as discrete entries in a bar plot.\n\ndf |>\n  ggplot() +\n  geom_bar(aes(x = Year, y = IBB_Bonds_total),\n           stat = \"identity\")\n\n\n\n\nNow I am curious what the bars will look like in team colors.\n\nbaseplot <- df |>\n  ggplot() +\n  \n  # https://teamcolorcodes.com/san-francisco-giants-color-codes/\n  geom_bar(aes(x = Year, y = IBB_Bonds_total),\n           color = \"#27251F\", fill = \"#FD5A1E\",\n           stat = \"identity\") +\n  \n  # https://teamcolorcodes.com/tampa-bay-rays-color-codes/\n  geom_bar(aes(x = Year, y = IBB_Rays_total),\n           color = \"#8FBCE6\", fill = \"#092C5C\",\n           stat = \"identity\")\n\n# print\nbaseplot\n\n\n\n\nMoving toward aesthetic beauty, I will update some of the theme elements.\n\n# some ideas from\n# https://github.com/nikopech/TidyTuesday/blob/master/R/2022-08-09/2022_08_09_ferris_wheels.R\n\ncurrent_plot <- baseplot +\n  labs(title = \"\",\n       subtitle = \"\",\n       caption = \"Derek Sollberger | August 26, 2022\",\n       x = \"season\",\n       y = \"intentional walk cumulative total\") +\n  theme(legend.position = \"none\",\n        panel.background = element_blank(),\n        plot.background = element_rect(\n            fill = \"#FFFFFF\", \n            color = \"#27251F\"\n        ),\n        plot.title = element_markdown(face = \"italic\",\n                                      margin = margin(b = 5),\n                                      size = 14),\n        plot.title.position = \"plot\",\n        plot.subtitle = element_markdown(face = \"italic\",\n                                         margin = margin(b = 5),\n                                         size = 12),\n        plot.caption = element_markdown(margin = margin(t = 0), \n                                        size = 10),\n        plot.caption.position = \"plot\",\n        plot.margin = margin(50, 50, 50, 50))\n\n# print\ncurrent_plot\n\n\n\n\nNow, I am going to attempt to add arrows (and later: labels) to highlight certain areas of the graph. This is still very new to me, so fingers crossed.\n\ncurrent_plot +\n  # In 2004, Barry Bonds received 120 intentional walks\n  annotate(color = \"#FD5A1E\",\n           geom = \"curve\",\n           size = 0.5,\n           x = 1999, xend = 2004,\n           y = 800, yend = 604) +\n  geom_textbox(aes(x = 1999, y = 800,\n                   color = \"#000000\",\n                   label = \"In 2004, Barry Bonds received 120 intentional walks\"),\n               size = 2) +\n  \n  # Start of Barry Bonds' MLB career\n  annotate(color = \"#FD5A1E\",\n           geom = \"curve\",\n           size = 0.5,\n           x = 1988, xend = 1986,\n           y = 200, yend = 0) +\n  geom_textbox(aes(x = 1988, y = 200,\n                   color = \"#000000\",\n                   label = \"Start of Barry Bonds' MLB career\"),\n               size = 2)\n\n\n\n# print\n# current_plot\n\nAt the moment, I am having difficulty getting labels to naturally appear beyond the panel.\nInstead, I will focus on the title and caption.\n\n# some ideas from\n# https://github.com/nikopech/TidyTuesday/blob/master/R/2022-08-09/2022_08_09_ferris_wheels.R\n\ncurrent_plot <- baseplot +\n  labs(title = \"From 1986 to 2007, Barry Bonds accumulated 688 intentional walks\",\n       subtitle = \"From 1998 to present, the Tampa Bay Rays have accumulated 28 fewer walks\",\n       caption = \"Derek Sollberger | August 26, 2022\",\n       x = \"season\",\n       y = \"intentional walk cumulative total\") +\n  theme(legend.position = \"none\",\n        panel.background = element_blank(),\n        plot.background = element_rect(\n            fill = \"#FFFFFF\", \n            color = \"#27251F\"\n        ),\n        plot.title = element_text(color = \"#FD5A1E\", size = 14, hjust = 0.5),\n        plot.title.position = \"plot\",\n        plot.subtitle = element_text(color = \"#092C5C\", size = 12, hjust = 0.5),\n        plot.caption = element_markdown(margin = margin(t = 0), \n                                        size = 10),\n        plot.caption.position = \"plot\",\n        plot.margin = margin(20, 20, 20, 20))\n\n# print\ncurrent_plot"
  }
]