{
  "hash": "86e59bbd0aefea84a3118ee472327599",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"DRIPBL: Quarto Dashboards\"\nauthor: \"Derek Sollberger\"\ndate: \"2025-10-18\"\nformat:\n  html\n---\n\n\n\n# Interactive Dashboards\n\nIn this workshop, we will explore the relatively new technology called [Quarto dashboards](https://quarto.org/docs/dashboards/). In this exploration, I have chosen a different data set per my interest, but much of the credit for the design of this workshop goes to the folks at Posit and other data scientists who have already created wonderful tutorials (see Additional Resources). Furthermore, we will incorporate interactive elements into our dashboards using `shiny`.\n\n## About the Presenter\n\nDerek Sollberger is a lecturer with CSML (Center for Statistics and Machine Learning) where he teaches Data Science and Bayesian Analysis. He has led several R programming workshops with ESL (Engineering Service Learning) and is a Posit Certified Tidyverse Instructor. Here he brings experience from acting as a data analysis consultant for several research projects in pedagogy.\n\n![Derek Sollberger](Lecturer_Derek.png)\n\n## Dashboards\n\nIt may be a good idea to get a sense of what we mean by \"dashboards\".  Let us spend a few minutes looking at a couple of examples from the Posit websites.\n\n* [Examples](https://quarto.org/docs/dashboards/#examples) from Posit\n\n## Libraries\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"bslib\")\nlibrary(\"bsicons\")\nlibrary(\"gt\")\nlibrary(\"sf\")\nlibrary(\"tidyverse\")\n\nbee_data <- readr::read_csv(\"bee_data.csv\")\nstates_shp <- readr::read_rds(\"us_states_shp.rds\")\n\ncolor_1 <- \"#E77500\"\ncolor_2 <- \"#121212\"\n```\n:::\n\n\n\n## Posit Cloud\n\nFor our convenience here in this workshop, you will be directed to [fork] a workspace in Posit Cloud.  That is, we have supplied the data sets, image files, and code libraries in advance.\n\n# Case Study: Bees!\n\n## Concern for Bee Populations\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n![Time](bee_news_1.png)\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n![ABC](bee_news_2.png)\n:::\n\n::::\n\n## Data Source\n\nOur data come from the Quick Stats at [USDA NASS](https://www.nass.usda.gov/) (United States Department of Agriculture National Agricultural Statistics Service).  Users can access a subset of the data through dropdown menus.  For replicability, I list my selections below:\n\n![USDA NASS Quick Stats](bee_search_criteria.png)\n\n* **Commodity:**\n\n    * **Program:** SURVEY\n    * **Sector:** ANIMALS & PRODUCTS\n    * **Group:** SPECIALTY\n    * **Commodity:** HONEY\n    * **Category:** INVENTORY\n    * **Data item:** HONEY, BEE COLONIES - INVENTORY, MEASURED IN COLONIES\n    \n* **Location:**\n\n    * **Geographic Level:** STATE\n    * **State:** [leave unselected for all states]\n    \n* **Time:**\n\n    * **Year:** [selected 2014 to 2024 to obtain about a decade of data]\n    * **Period Type:** ANNUAL (note: the \"annual\" measurements were done by each state, while other granularity might not be available for all states)\n    * **Period:** MARKETING YEAR\n\n## Bar Charts\n\n:::: {.panel-tabset}\n\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](quarto_dashboards_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbee_data |> \n  group_by(Year) |>\n  mutate(total_colonies = sum(Value)) |>\n  ungroup() |>\n  select(Year, total_colonies) |>\n  distinct() |>\n  mutate(num_colonies = total_colonies / 1e6) |>\n  ggplot(aes(x = factor(Year), y = num_colonies)) +\n  geom_bar(color = \"#121212\", fill = \"#E77500\",\n           stat = \"identity\") +\n  coord_cartesian(ylim = c(2.5,3.0)) +\n  labs(title = \"US Bee Population\",\n       subtitle = \"Survey of bee colonies\",\n       # caption = \"source: USDA NASS\",\n       x = \"year\",\n       y = \"bee colonies (in millions)\") +\n  theme_minimal()\n```\n:::\n\n\n\n## Each State\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](quarto_dashboards_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnj_plot <- bee_data |> \n  filter(State == \"NEW JERSEY\") |>\n  mutate(num_colonies = Value / 1e3) |>\n  ggplot(aes(x = factor(Year), y = num_colonies)) +\n  geom_bar(color = \"#121212\", fill = \"#E77500\",\n           stat = \"identity\") +\n  labs(title = \"NEW JERSEY\",\n       subtitle = \"Survey of bee colonies\",\n       caption = \"source: USDA NASS\",\n       x = \"year\",\n       y = \"bee colonies (in thousands)\") +\n  theme_minimal()\n\nnj_plot\n```\n:::\n\n\n\n## Facets\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](quarto_dashboards_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbee_data |>\n  filter(Year >= 2015 & Year <= 2019) |>\n  filter(State %in% c(\"CALIFORNIA\", \"NEW JERSEY\")) |>\n  ggplot(aes(x = Year, y = Value)) +\n  facet_wrap(vars(State), scales = \"free_y\") +\n  geom_bar(color = \"#121212\", fill = \"#E77500\", stat = \"identity\")\n```\n:::\n\n\n\n::::\n\n## Maps\n\n:::: {.panel-tabset}\n\n## Spatial Viz\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](quarto_dashboards_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstates_shp |>\n  mutate(this_selection = ifelse(NAME == \"New Jersey\", \n                               \"focus\", \"other states\")) |>\n  ggplot() +\n  geom_sf(aes(fill = this_selection)) +\n  labs(title = \"State Selection\", \n         subtitle = \"toward a Dashboard card\",\n         caption = \"Princeton Wintersession\") +\n  scale_fill_manual(values = c(color_1, \"gray80\")) +\n  theme_minimal()\n```\n:::\n\n\n\n## Each State\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](quarto_dashboards_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnj_map <- states_shp |>\n  mutate(this_selection = ifelse(NAME == \"New Jersey\", \n                               \"focus\", \"other states\")) |>\n  ggplot() +\n  geom_sf(aes(fill = this_selection)) +\n  labs(title = \"New Jersey\", \n         # subtitle = \"toward a Dashboard card\",\n         caption = \"Princeton Wintersession\") +\n  scale_fill_manual(values = c(color_1, \"gray80\")) +\n  theme_minimal() +\n  theme(axis.title.x = element_blank(),\n        axis.text.x  = element_blank(),\n        axis.ticks.x = element_blank(),\n        axis.title.y = element_blank(),\n        axis.text.y  = element_blank(),\n        axis.ticks.y = element_blank(),\n        legend.position = \"none\")\n\nnj_map\n```\n:::\n\n\n\n::::\n\n\n\n# Setup (YAML and QMD)\n\nIn a Posit Cloud session, create a new Quarto document, and then change the `format` to `dashboard`.\n\n```\n---\ntitle: \"My Dashboard\"\nformat: dashboard\n---\n\n# notebook content goes here...\n```\n\n\n## Cards\n\nEach additional visible object is arranged into the dashboard as a *card*.\n\n## Layout\n\n### Rows\n\nBy default, the arrangement of the cards is in rows.\n\n### Columns\n\nThe default settings use \n\n* first-level headers (`#`) for tabs\n* second-level headers (`##`) for rows\n* third-level headers (`###`) for columns\n\n::: {.callout-tip collapse=\"true\"}\n## Orientation\n\nTo change the arrangements into columns, change the YAML header\n\n```\nformat: \n  dashboard:\n    orientation: columns\n```\n\nMore specifically, our file will use \n\n* first-level headers (`#`) for tabs\n* second-level headers (`##`) for columns\n* third-level headers (`###`) for rows\n\n:::\n\n## Activity 1\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n* Create a new Quarto document whose YAML \n\n    * creates a `dashboard`  \n    * includes `orientation: columns`\n    \n* Form a layout with\n\n    * 2 columns\n    * 2 rows in the first column, 3 rows in the second column\t\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"40%\"}\n![Activity 1](activity_1_diagram.png)\n:::\n\n::::\n\n\n\n\n# Prototype Content\n\nLet us now place some content into the cards (as placeholders) to see how our plans are faring.  We will be starting from `template_1.qmd`.\n\n## Plots\n\nAs usual in R, we can have code chunks that display plots. Observe that we have loaded some objects into the environment such as `bee_data`.\n\nFor starters, we can put a code chunk into the first card (column 1, row 1) that displays the `nj_plot`.\n\n\n\n\n```{.r .cell-code}\nnj_plot\n```\n\n\n\nEach card used this way can be given a **title**.  We can add a title to a card using the `#| title: ` code chunk in Quarto markdown.\n\n## Value Boxes\n\nTo emphasize certain words or numbers in the dashboard, we can use `valueboxes`.  For example, let us place a valuebox into the top-right card (column 2, row 1) that simply says a state name for now.\n\n\n```\n::: {.valuebox icon=\"award-fill\" color=\"#E77500\"}\nNEW JERSEY\n:::\n```\n\nOf importance, for a valuebox to appear and function as intended, the `R` code needs to output a value.\n\n## Activity 2\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n* Starting from `template_1.qmd`\n* Place `nj_map` into the bottom-left card (column 1, row 2)\n\n    * give this card a title\n    \n* Create two more valueboxes\n\n    * feel free to use different icons and colors\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"40%\"}\n![Activity 2](activity_2_diagram.png)\n:::\n\n::::\n\n\n# Interactive Content\n\nNow we aim to offer interactivity to the user.\n\n## Shiny\n\n![Shiny app](shiny_1.png)\n\n* image source: [Introduction to Data Science](https://bookdown.org/hneth/i2ds/shiny.html#shiny-overview)\n\n![Shiny code](shiny_2.png)\n\n* image source: [Ted Laderas](https://laderast.github.io/gradual_shiny/app-1-connecting-ui-and-server.html)\n\n## Shiny Dashboard\n\nSome code elements that are paramount here include needing\n\n* `server: shiny` in the YAML\n* `context: setup` in the first code block (i.e. where you load code libraries)\n* `context: server` in the main code block\n\n## Sidebar\n\nContinuing our thoughts about the app layout, and how we want an intuitive place for our user-interface objects, let us put in a **sidebar**\n\n```\n## {.sidebar}\n\nInstructions to user goes here\n```\n### Inputs\n\nLet the user pick the state. Place the following code into the sidebar.\n\n```\nselectInput(\n  \"state_choice\",\n  \"Choose a state:\",\n  choices = unique(bee_data$State)\n)\n```\n\nLet the user pick the year.  Place the following code into the sidebar.\n\n```\nsliderInput(\n  \"year_choice\", \"Choose a year:\",\n  min = 2015, max = 2023, step = 1, \n  value = 2023,\n)\n```\n\n## Server\n\nNow, we need use the `shiny` framework to perform these computations in a *reactive* way.  Create the following code chunk, and be sure to set `#| context: server`.\n\n```\n#| context: server\noutput$state_plot <- renderPlot({\n  bee_data |> \n  filter(State == input$state_choice) |>\n  mutate(num_colonies = Value / 1e3) |>\n  mutate(year_color = ifelse(Year == input$year_choice,\n         TRUE, FALSE)) |>\n  ggplot(aes(x = factor(Year), y = num_colonies)) +\n  geom_bar(aes(fill = year_color),\n           color = \"#121212\", ,\n           stat = \"identity\") +\n  labs(title = paste0(str_to_title(input$state_choice)),\n       subtitle = \"Survey of bee colonies\",\n       caption = \"source: USDA NASS\",\n       x = \"year\",\n       y = \"bee colonies (in thousands)\") +\n  scale_fill_manual(values = c(\"#121212\", \"#E77500\")) +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n})\n\n\noutput$state_choice <- renderText({input$state_choice})\n\n```\n\n## Plots\n\nNow we have have the `output` in place, we can use more `shiny` code to plot that output. Where the barchart code was intended to be, place the following\n\n```\nplotOutput(\"state_plot\")\n```\n\n## Valueboxes\n\nNow we have have the `output` in place, we can use more `shiny` code to display  certain numbers. Inside the valueboxes' divs, place the following\n\n```\nr textOutput(\"state_choice\")\n```\n\n## Activity 3\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\nStarting from `template_2.qmd`\n\n* `server`: use `renderPlot` on the code that produces a map from the shapefile\n* `server`: use `renderText` on the `slider_input` variable to place `year_choice` in the `output`\n* `ui`: use `textOutput` to display the user's `year_choice`.\n* `ui`: use `plotOutput` to show the map (of the contiguous United States)\n\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"40%\"}\n![Activity 3](activity_3_diagram.png)\n:::\n\n::::\n\n\n# Data Mining\n\nFortunately, for this relatively simple app, the usual `dplyr` verbs work well with our data.  Just remember when to call variables from the `input` selections. For example, when the user makes their choice among the states, the result is stored in `input$state_choice`, and we can use it in `filter`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbee_data |> \n  filter(State == input$state_choice)\n```\n:::\n\n\n\n## Activity 4\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\nStarting from `template_3.qmd`, try to implement the following in your interactive Quarto dashboard:\n\n* allow the user's `year_choice` to affect which bar is highlighted in the bar graph\n* allow the user's `year_choice` to affect which state is highlighted in the state map\n* correctly restate the number of bee colonies for the user's selections of state and year.\n* rename the document from \"Activity 4\" to \"Bee Dashboard\"\t\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"40%\"}\n![Activity 4](activity_4_diagram.png)\n:::\n\n::::\n\n# Epilogue\n\n**Congratulations** on making your interactive Quarto dashboard.\n\nIf you have comments---especially on how to expand this workshop---please let me know!\n\n## Additional Resources\n\nFor this workshop, I followed the materials presented by Mine Cetinkaya-Rundel and Posit\n\n* [Part 1](https://www.youtube.com/watch?v=HW7QbqI4fH0), [Part 2](https://www.youtube.com/watch?v=KdsQgwaY950), [Part 3](https://www.youtube.com/watch?v=NigWSB-jG4Y)\n\nFolks that are interested in learning more about Quarto Dashboards can refer to resources such as the following:\n\n* How to [Automate](https://www.youtube.com/watch?v=xnJuXOw7iu8) your Reporting by Isabella Velasquez\n* [Easy Dashboards](https://www.youtube.com/watch?v=R3sNVE8TYeo) by The GRAPH Courses\n* Interactive Infographic using [DisplayR](https://www.youtube.com/watch?v=RXdcHCPJRg8) by Melisaa Van Bussel\n* [Quarto Dashboards](https://www.youtube.com/watch?v=jX4_Dnzhl0M) by Charles Teague\n* [Quarto Dashboards](https://www.youtube.com/watch?v=Kq1hgg2NtE4) by Isabella Velasquez\n* How to [Style](https://www.youtube.com/watch?v=jX4_Dnzhl0M) your Quarto docs without HTML & CSS by Albert Rapp\n\n* [Beyond Dashboards](https://www.youtube.com/watch?v=fzykFa6c3LI) by Sean Nguyen\n\n\n# College Prep\n\n## Languages\n\n::: {.callout-tip}\n## Learning a Programming Language\n\n* Find a free, online resource\n* try out a few lessons\n* perhaps earn a certificate\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"ntozhumxum\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#ntozhumxum table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#ntozhumxum thead, #ntozhumxum tbody, #ntozhumxum tfoot, #ntozhumxum tr, #ntozhumxum td, #ntozhumxum th {\n  border-style: none;\n}\n\n#ntozhumxum p {\n  margin: 0;\n  padding: 0;\n}\n\n#ntozhumxum .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#ntozhumxum .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#ntozhumxum .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#ntozhumxum .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#ntozhumxum .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ntozhumxum .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ntozhumxum .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ntozhumxum .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#ntozhumxum .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#ntozhumxum .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#ntozhumxum .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#ntozhumxum .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#ntozhumxum .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#ntozhumxum .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#ntozhumxum .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#ntozhumxum .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#ntozhumxum .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#ntozhumxum .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#ntozhumxum .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ntozhumxum .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#ntozhumxum .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#ntozhumxum .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#ntozhumxum .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ntozhumxum .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#ntozhumxum .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#ntozhumxum .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ntozhumxum .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ntozhumxum .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#ntozhumxum .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ntozhumxum .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#ntozhumxum .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ntozhumxum .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ntozhumxum .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ntozhumxum .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ntozhumxum .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ntozhumxum .gt_left {\n  text-align: left;\n}\n\n#ntozhumxum .gt_center {\n  text-align: center;\n}\n\n#ntozhumxum .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#ntozhumxum .gt_font_normal {\n  font-weight: normal;\n}\n\n#ntozhumxum .gt_font_bold {\n  font-weight: bold;\n}\n\n#ntozhumxum .gt_font_italic {\n  font-style: italic;\n}\n\n#ntozhumxum .gt_super {\n  font-size: 65%;\n}\n\n#ntozhumxum .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#ntozhumxum .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#ntozhumxum .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#ntozhumxum .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#ntozhumxum .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#ntozhumxum .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#ntozhumxum .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#ntozhumxum .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#ntozhumxum div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"2\" class=\"gt_heading gt_title gt_font_normal\" style>Data Science Programming Languages</td>\n    </tr>\n    <tr class=\"gt_heading\">\n      <td colspan=\"2\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\" style>Which one is better?</td>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"R\">R</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"Python\">Python</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"R\" class=\"gt_row gt_center\" style=\"background-color: #FFC100;\">Data Science</td>\n<td headers=\"Python\" class=\"gt_row gt_center\" style=\"background-color: #D0CEF3;\">Machine Learning</td></tr>\n    <tr><td headers=\"R\" class=\"gt_row gt_center\" style=\"background-color: #FFC100;\">Dashboards</td>\n<td headers=\"Python\" class=\"gt_row gt_center\" style=\"background-color: #D0CEF3;\">Software Development</td></tr>\n    <tr><td headers=\"R\" class=\"gt_row gt_center\" style=\"background-color: #FFC100;\">Interactvity</td>\n<td headers=\"Python\" class=\"gt_row gt_center\" style=\"background-color: #D0CEF3;\">Object-Oriented Programming</td></tr>\n    <tr><td headers=\"R\" class=\"gt_row gt_center\" style=\"background-color: #FFC100;\">Visualization</td>\n<td headers=\"Python\" class=\"gt_row gt_center\" style=\"background-color: #D0CEF3;\">Big Data</td></tr>\n    <tr><td headers=\"R\" class=\"gt_row gt_center\" style=\"background-color: #FFC100;\">Debugging</td>\n<td headers=\"Python\" class=\"gt_row gt_center\" style=\"background-color: #D0CEF3;\">Faster</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"2\"> source: Derek's opinion</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n# Courses\n\n::::: {.panel-tabset}\n\n## AP\n\n* AP Statistics\n* AP Calculus\n\n## High Resources\n\n* summer camp\n* about $5000 per seat\n\n## Low Resources\n\n* Questbridge\n\n\n:::::\n\n\n\n\n\n\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n\t\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n\n:::\n\n::::\n\n\n::: {.callout-tip}\n## Callout Box Title\n\nCallout box content\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [
      "quarto_dashboards_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}