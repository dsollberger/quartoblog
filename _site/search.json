[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "quartoblog",
    "section": "",
    "text": "Sep 3, 2022\n\n\nDerek Sollberger\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSep 2, 2022\n\n\nDerek Sollberger\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nbaseball\n\n\n\n\n\n\n\n\n\n\n\nAug 26, 2022\n\n\nDerek Sollberger\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nfonts\n\n\n\n\n\n\n\n\n\n\n\nAug 15, 2022\n\n\nDerek Sollberger\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nvisualization\n\n\n\n\n\n\n\n\n\n\n\nAug 14, 2022\n\n\nDerek Sollberger\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nsports\n\n\n\n\n\n\n\n\n\n\n\nAug 12, 2022\n\n\nDerek Sollberger\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexploratory data analysis\n\n\n\n\n\n\n\n\n\n\n\nAug 12, 2022\n\n\nDerek Sollberger\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nquarto\n\n\n\n\n\n\n\n\n\n\n\nAug 12, 2022\n\n\nDerek Sollberger\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Today I followed Albert Rapp’s guide to creating a Quarto blog.\nFor me, it was a matter of making\n\na GitHub repository, called it quartoblog, and cloned it to my computer\ndeleted the quartoblog folder on my computer\nstarted a new project in RStudio to select Quarto web site (note that Quarto is already bundled in newer versions of the RStudio IDE)\ngot Netlify and GitHub to play nicely with each other and share the quartoblog repository\nupdated my domain redirect to the Netlify site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/bump/bump.html",
    "href": "posts/bump/bump.html",
    "title": "Bump",
    "section": "",
    "text": "library(\"ggbump\")\nlibrary(\"Lahman\")\nlibrary(\"tidyverse\")\n\nFor today’s easy foray, let us seek out the wins and losses of teams in the Teams data frame (I tend to call my data frames df for typing ease).\n\ndf <- Teams\n\nThere are about 3000 observations and 48 variables. I will need some of the column names.\n\ncolnames(df)\n\n [1] \"yearID\"         \"lgID\"           \"teamID\"         \"franchID\"      \n [5] \"divID\"          \"Rank\"           \"G\"              \"Ghome\"         \n [9] \"W\"              \"L\"              \"DivWin\"         \"WCWin\"         \n[13] \"LgWin\"          \"WSWin\"          \"R\"              \"AB\"            \n[17] \"H\"              \"X2B\"            \"X3B\"            \"HR\"            \n[21] \"BB\"             \"SO\"             \"SB\"             \"CS\"            \n[25] \"HBP\"            \"SF\"             \"RA\"             \"ER\"            \n[29] \"ERA\"            \"CG\"             \"SHO\"            \"SV\"            \n[33] \"IPouts\"         \"HA\"             \"HRA\"            \"BBA\"           \n[37] \"SOA\"            \"E\"              \"DP\"             \"FP\"            \n[41] \"name\"           \"park\"           \"attendance\"     \"BPF\"           \n[45] \"PPF\"            \"teamIDBR\"       \"teamIDlahman45\" \"teamIDretro\"   \n\n\nTo make a quick exploration, let us filter for the past 10 seasons of baseball (2012 to 2021) and select the columns I will use later.\n\ndf <- Teams |>\n  filter(yearID >= 2012) |>\n  select(yearID, lgID, franchID, divID, Rank)\nhead(df)\n\n  yearID lgID franchID divID Rank\n1   2012   NL      ARI     W    3\n2   2012   NL      ATL     E    2\n3   2012   AL      BAL     E    2\n4   2012   AL      BOS     E    5\n5   2012   AL      CHW     C    2\n6   2012   NL      CHC     C    5\n\n\nTo be honest, I thought I was going to have to code up some function to rank team wins within the MLB divisions, but the Lahman database already has that!\n\ndf_left <- df |> filter(yearID == 2012 & lgID == \"NL\")\ndf_right <- df |> filter(yearID == 2021 & lgID == \"NL\")\n\n\ndf |>\n  filter(lgID == \"NL\") |>\n  ggplot(aes(x = yearID, y = -Rank, color = franchID)) +\n  geom_bump(size = 2) +\n  geom_point(aes(x = yearID, y = -Rank, color = franchID),\n             size = 5) +\n  geom_label(aes(x = yearID, y = -Rank, label = franchID), data = df_left) +\n  geom_label(aes(x = yearID, y = -Rank, label = franchID), data = df_right) +\n  facet_wrap(. ~ divID, ncol = 1) +\n  labs(title = \"National League Standings\",\n       subtitle = \"early draft of bump plot\",\n       caption = \"Derek Sollberger\") +\n  theme(legend.position = \"none\",\n        panel.background = element_blank())\n\nWarning in f(...): 'StatBump' needs at least two observations per group\n\n\n\n\n\n\n\n\nbump plot"
  },
  {
    "objectID": "posts/typewriter/typewriter.html",
    "href": "posts/typewriter/typewriter.html",
    "title": "Typewriter",
    "section": "",
    "text": "library(\"gt\")\n\n\ndf <- data.frame(\n  Period = c(\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\"),\n  Course = c(\"Academic Decathlon\", \"Spanish 4 AP\", \"Calculus AP BC\", \"English 3 Honors\", \"Computer Applications\", \"Physics AP\", \"US History\")\n)\n\n\n# https://gt.rstudio.com/reference/cell_borders.html\ndf |>\n  gt() |>\n  tab_options(\n    # table.background.color = \"#E8EBE6\",\n    table.font.names = \"Courier New\"\n  ) |>\n  tab_style(\n    locations = cells_body(\n      columns = everything(),\n      rows = everything()\n    ),\n    style = list(\n      cell_borders(\n        sides = c(\"top\", \"bottom\"),\n        color = \"cyan\",\n        style = \"solid\"\n      ),\n      cell_fill(color = \"#E8EBE6\") #https://www.crispedge.com/color/e8ebe6/\n    )\n  ) |>\n  tab_style(\n    locations = cells_body(\n      columns = \"Course\",\n      rows = everything()\n    ),\n    style = list(\n      cell_borders(\n        sides = c(\"left\"),\n        color = \"red\",\n        style = \"solid\"\n      ),\n      cell_fill(color = \"#E8EBE6\")\n    )\n  )\n\n\n\n\n\n  \n  \n    \n      Period\n      Course\n    \n  \n  \n    0\nAcademic Decathlon\n    1\nSpanish 4 AP\n    2\nCalculus AP BC\n    3\nEnglish 3 Honors\n    4\nComputer Applications\n    5\nPhysics AP\n    6\nUS History\n  \n  \n  \n\n\n\n\n\n\n\nhigh school junior year schedule"
  },
  {
    "objectID": "posts/overviewR/overviewR.html",
    "href": "posts/overviewR/overviewR.html",
    "title": "overviewR",
    "section": "",
    "text": "cheat sheet: https://github.com/cosimameyer/overviewR/blob/master/man/figures/CheatSheet_overviewR.pdf\n\n\nlibrary(\"overviewR\")\nlibrary(\"palmerpenguins\")\n\nAt this moment, I misread what overviewR does (I thought it would summarize everything). Instead, I will just try out one tool for now.\n\npenguins_raw |>\n  overview_na()"
  },
  {
    "objectID": "posts/oblicubes/oblicubes.html",
    "href": "posts/oblicubes/oblicubes.html",
    "title": "Oblicubes",
    "section": "",
    "text": "https://github.com/trevorld/oblicubes\n\n\nlibrary(\"bittermelon\")\n\n\nAttaching package: 'bittermelon'\n\n\nThe following object is masked from 'package:base':\n\n    which\n\nlibrary(\"grid\")\nlibrary(\"oblicubes\")\n\n\n# example from\n# https://github.com/trevorld/oblicubes\nfont_file <- system.file(\"fonts/spleen/spleen-8x16.hex.gz\", package = \"bittermelon\")\nfont <- read_hex(font_file)\nbml <- as_bm_list(\"RSTATS\", font = font)\n# Add a shadow effect and border\nbm <- (3 * bml) |>\n  bm_pad(sides = 2L) |>\n  bm_shadow(value = 2L) |>\n  bm_call(cbind) |>\n  bm_extend(sides = 1L, value = 1L)\ncol <- apply(bm + 1L, c(1, 2), function(i) {\n  switch(i, \"white\", \"grey20\", \"lightblue\", \"darkblue\")\n})\ncoords <- xyz_heightmap(bm, col = col, flipy=FALSE)\ngrid.oblicubes(coords, width=unit(2.2, \"mm\"))\n\n\n\n\n\n# Bio 18\nbml <- as_bm_list(\"BIO 18\", font = font)\n\nbm <- (3 * bml) |>\n  bm_pad(sides = 2L) |>\n  bm_shadow(value = 2L) |>\n  bm_call(cbind) |>\n  bm_extend(sides = 1L, value = 1L)\ncol <- apply(bm + 1L, c(1, 2), function(i) {\n  switch(i, \"white\", \"#5b5b5b\", \"#DAA900\", \"#002856\")\n  # switch(i, \"#DAA900\", \"#5b5b5b\", \"#0091b3\", \"#002856\")\n})\ncoords <- xyz_heightmap(bm, col = col, flipy=FALSE)\ngrid.oblicubes(coords, width=unit(2.2, \"mm\"))\n\n\n\n\n\n# Math 32\nbml <- as_bm_list(\"MATH32\", font = font)\n\nbm <- (3 * bml) |>\n  bm_pad(sides = 2L) |>\n  bm_shadow(value = 2L) |>\n  bm_call(cbind) |>\n  bm_extend(sides = 1L, value = 1L)\ncol <- apply(bm + 1L, c(1, 2), function(i) {\n  switch(i, \"white\", \"#5b5b5b\", \"#DAA900\", \"#002856\")\n  # switch(i, \"#DAA900\", \"#5b5b5b\", \"#0091b3\", \"#002856\")\n})\ncoords <- xyz_heightmap(bm, col = col, flipy=FALSE)\ngrid.oblicubes(coords, width=unit(2.2, \"mm\"))\n\n\n\n\n\n# Spark\nbml <- as_bm_list(\"SPORTS\", font = font)\n\nbm <- (3 * bml) |>\n  bm_pad(sides = 2L) |>\n  bm_shadow(value = 2L) |>\n  bm_call(cbind) |>\n  bm_extend(sides = 1L, value = 1L)\ncol <- apply(bm + 1L, c(1, 2), function(i) {\n  switch(i, \"white\", \"#5b5b5b\", \"#DAA900\", \"#002856\")\n  # switch(i, \"#DAA900\", \"#5b5b5b\", \"#0091b3\", \"#002856\")\n})\ncoords <- xyz_heightmap(bm, col = col, flipy=FALSE)\ngrid.oblicubes(coords, width=unit(2.2, \"mm\"))\n\n\n\n\nand then I cropped an resized each image to 262 by 146 pixels\n\nhttps://unomaha.instructure.com/courses/33506/pages/create-a-canvas-dashboard-image-for-your-course"
  },
  {
    "objectID": "posts/oblicubes.html",
    "href": "posts/oblicubes.html",
    "title": "Oblicubes",
    "section": "",
    "text": "https://github.com/trevorld/oblicubes\n\n\nlibrary(\"bittermelon\")\n\n\nAttaching package: 'bittermelon'\n\n\nThe following object is masked from 'package:base':\n\n    which\n\nlibrary(\"grid\")\nlibrary(\"oblicubes\")\n\n\n# example from\n# https://github.com/trevorld/oblicubes\nfont_file <- system.file(\"fonts/spleen/spleen-8x16.hex.gz\", package = \"bittermelon\")\nfont <- read_hex(font_file)\nbml <- as_bm_list(\"RSTATS\", font = font)\n# Add a shadow effect and border\nbm <- (3 * bml) |>\n  bm_pad(sides = 2L) |>\n  bm_shadow(value = 2L) |>\n  bm_call(cbind) |>\n  bm_extend(sides = 1L, value = 1L)\ncol <- apply(bm + 1L, c(1, 2), function(i) {\n  switch(i, \"white\", \"grey20\", \"lightblue\", \"darkblue\")\n})\ncoords <- xyz_heightmap(bm, col = col, flipy=FALSE)\ngrid.oblicubes(coords, width=unit(2.2, \"mm\"))\n\n\n\n\n\n# Bio 18\nbml <- as_bm_list(\"BIO 18\", font = font)\n\nbm <- (3 * bml) |>\n  bm_pad(sides = 2L) |>\n  bm_shadow(value = 2L) |>\n  bm_call(cbind) |>\n  bm_extend(sides = 1L, value = 1L)\ncol <- apply(bm + 1L, c(1, 2), function(i) {\n  switch(i, \"white\", \"#5b5b5b\", \"#DAA900\", \"#002856\")\n  # switch(i, \"#DAA900\", \"#5b5b5b\", \"#0091b3\", \"#002856\")\n})\ncoords <- xyz_heightmap(bm, col = col, flipy=FALSE)\ngrid.oblicubes(coords, width=unit(2.2, \"mm\"))\n\n\n\n\n\n# Math 32\nbml <- as_bm_list(\"MATH32\", font = font)\n\nbm <- (3 * bml) |>\n  bm_pad(sides = 2L) |>\n  bm_shadow(value = 2L) |>\n  bm_call(cbind) |>\n  bm_extend(sides = 1L, value = 1L)\ncol <- apply(bm + 1L, c(1, 2), function(i) {\n  switch(i, \"white\", \"#5b5b5b\", \"#DAA900\", \"#002856\")\n  # switch(i, \"#DAA900\", \"#5b5b5b\", \"#0091b3\", \"#002856\")\n})\ncoords <- xyz_heightmap(bm, col = col, flipy=FALSE)\ngrid.oblicubes(coords, width=unit(2.2, \"mm\"))\n\n\n\n\n\n# Spark\nbml <- as_bm_list(\"SPORTS\", font = font)\n\nbm <- (3 * bml) |>\n  bm_pad(sides = 2L) |>\n  bm_shadow(value = 2L) |>\n  bm_call(cbind) |>\n  bm_extend(sides = 1L, value = 1L)\ncol <- apply(bm + 1L, c(1, 2), function(i) {\n  switch(i, \"white\", \"#5b5b5b\", \"#DAA900\", \"#002856\")\n  # switch(i, \"#DAA900\", \"#5b5b5b\", \"#0091b3\", \"#002856\")\n})\ncoords <- xyz_heightmap(bm, col = col, flipy=FALSE)\ngrid.oblicubes(coords, width=unit(2.2, \"mm\"))"
  },
  {
    "objectID": "posts/intentional_walks/ibb.html",
    "href": "posts/intentional_walks/ibb.html",
    "title": "Intentional Walks",
    "section": "",
    "text": "Today’s exploration and visualization practive was inspired by this tweet:\n“Barry Bonds has over 200 more intentional walks than the Rays entire franchise.” — Cespedes Family BBQ, Dec. 2, 2013\n“Almost nine years later and Bonds still has 28 more intentional walks than the Rays franchise.” — Jim Passon, Aug. 25, 2022"
  },
  {
    "objectID": "posts/intentional_walks/ibb.html#gathering-the-data",
    "href": "posts/intentional_walks/ibb.html#gathering-the-data",
    "title": "Intentional Walks",
    "section": "Gathering the Data",
    "text": "Gathering the Data\nAt first, I thought that I could reasonably type in all of the data, but Bonds’ career was quite long. I copy-and-pasted the batting table from Baseball Reference and focused on the Year and IBB columns.\nThe franchise page for the Tampa Bay Rays did not have intentional walks quickly accessible, so I simply went through the year-by-year pages and gathered the IBB total (fortunately easy to find visually as the last column).\n\ndf_bonds <- readxl::read_xlsx(\"ibb.xlsx\", sheet = \"Bonds\")\ndf_rays  <- readxl::read_xlsx(\"ibb.xlsx\", sheet = \"Rays\")"
  },
  {
    "objectID": "posts/intentional_walks/ibb.html#data-wrangling",
    "href": "posts/intentional_walks/ibb.html#data-wrangling",
    "title": "Intentional Walks",
    "section": "Data Wrangling",
    "text": "Data Wrangling\nWhile I could probably affect the horizontal axis later in a ggplot visualization, I prefer today to have the data in one data frame. Let me merge the data.\n\ndf <- df_bonds |>\n  full_join(df_rays, by = \"Year\") |>\n  rename(\"IBB_Bonds\" = \"IBB.x\",\n        \"IBB_Rays\" = \"IBB.y\")\n\nThe naturally missing values probably would not affect the calculations much, but for peace of mind, let us impute those values to be zeroes.\n\ndf$IBB_Bonds[is.na(df$IBB_Bonds)] <- 0\ndf$IBB_Rays[is.na(df$IBB_Rays)]   <- 0\n\nIn the spirit of the tweet, we will need to talk about cumulative totals.\n\ndf <- df |>\n  mutate(IBB_Bonds_total = cumsum(IBB_Bonds),\n         IBB_Rays_total  = cumsum(IBB_Rays))"
  },
  {
    "objectID": "posts/intentional_walks/ibb.html#data-visualization",
    "href": "posts/intentional_walks/ibb.html#data-visualization",
    "title": "Intentional Walks",
    "section": "Data Visualization",
    "text": "Data Visualization\nWhile line graphs (with areas filled) would probably be the most visually appealing, it might be better to treat seasons as discrete entries in a bar plot.\n\ndf |>\n  ggplot() +\n  geom_bar(aes(x = Year, y = IBB_Bonds_total),\n           stat = \"identity\")\n\n\n\n\nNow I am curious what the bars will look like in team colors.\n\nbaseplot <- df |>\n  ggplot() +\n  \n  # https://teamcolorcodes.com/san-francisco-giants-color-codes/\n  geom_bar(aes(x = Year, y = IBB_Bonds_total),\n           color = \"#27251F\", fill = \"#FD5A1E\",\n           stat = \"identity\") +\n  \n  # https://teamcolorcodes.com/tampa-bay-rays-color-codes/\n  geom_bar(aes(x = Year, y = IBB_Rays_total),\n           color = \"#8FBCE6\", fill = \"#092C5C\",\n           stat = \"identity\")\n\n# print\nbaseplot\n\n\n\n\nMoving toward aesthetic beauty, I will update some of the theme elements.\n\n# some ideas from\n# https://github.com/nikopech/TidyTuesday/blob/master/R/2022-08-09/2022_08_09_ferris_wheels.R\n\ncurrent_plot <- baseplot +\n  labs(title = \"\",\n       subtitle = \"\",\n       caption = \"Derek Sollberger | August 26, 2022\",\n       x = \"season\",\n       y = \"intentional walk cumulative total\") +\n  theme(legend.position = \"none\",\n        panel.background = element_blank(),\n        plot.background = element_rect(\n            fill = \"#FFFFFF\", \n            color = \"#27251F\"\n        ),\n        plot.title = element_markdown(face = \"italic\",\n                                      margin = margin(b = 5),\n                                      size = 14),\n        plot.title.position = \"plot\",\n        plot.subtitle = element_markdown(face = \"italic\",\n                                         margin = margin(b = 5),\n                                         size = 12),\n        plot.caption = element_markdown(margin = margin(t = 0), \n                                        size = 10),\n        plot.caption.position = \"plot\",\n        plot.margin = margin(50, 50, 50, 50))\n\n# print\ncurrent_plot\n\n\n\n\nNow, I am going to attempt to add arrows (and later: labels) to highlight certain areas of the graph. This is still very new to me, so fingers crossed.\n\ncurrent_plot +\n  # In 2004, Barry Bonds received 120 intentional walks\n  annotate(color = \"#FD5A1E\",\n           geom = \"curve\",\n           size = 0.5,\n           x = 1999, xend = 2004,\n           y = 800, yend = 604) +\n  geom_textbox(aes(x = 1999, y = 800,\n                   color = \"#000000\",\n                   label = \"In 2004, Barry Bonds received 120 intentional walks\"),\n               size = 2) +\n  \n  # Start of Barry Bonds' MLB career\n  annotate(color = \"#FD5A1E\",\n           geom = \"curve\",\n           size = 0.5,\n           x = 1988, xend = 1986,\n           y = 200, yend = 0) +\n  geom_textbox(aes(x = 1988, y = 200,\n                   color = \"#000000\",\n                   label = \"Start of Barry Bonds' MLB career\"),\n               size = 2)\n\n\n\n# print\n# current_plot\n\nAt the moment, I am having difficulty getting labels to naturally appear beyond the panel.\nInstead, I will focus on the title and caption.\n\n# some ideas from\n# https://github.com/nikopech/TidyTuesday/blob/master/R/2022-08-09/2022_08_09_ferris_wheels.R\n\ncurrent_plot <- baseplot +\n  labs(title = \"From 1986 to 2007, Barry Bonds accumulated 688 intentional walks\",\n       subtitle = \"From 1998 to present, the Tampa Bay Rays have accumulated 28 fewer walks\",\n       caption = \"Derek Sollberger | August 26, 2022\",\n       x = \"season\",\n       y = \"intentional walk cumulative total\") +\n  theme(legend.position = \"none\",\n        panel.background = element_blank(),\n        plot.background = element_rect(\n            fill = \"#FFFFFF\", \n            color = \"#27251F\"\n        ),\n        plot.title = element_text(color = \"#FD5A1E\", size = 14, hjust = 0.5),\n        plot.title.position = \"plot\",\n        plot.subtitle = element_text(color = \"#092C5C\", size = 12, hjust = 0.5),\n        plot.caption = element_markdown(margin = margin(t = 0), \n                                        size = 10),\n        plot.caption.position = \"plot\",\n        plot.margin = margin(20, 20, 20, 20))\n\n# print\ncurrent_plot"
  },
  {
    "objectID": "posts/coefficient_of_variation.html",
    "href": "posts/coefficient_of_variation.html",
    "title": "Coefficient of Variation",
    "section": "",
    "text": "For a future lecture in my Sports Analytics course, I want an example of a baseball statistic where the averages for two players are similar, but their variances in that same statistic are quite different. It is still early in the semester, so I am looking for an easy-to-understand statistic. Therefore, I will explore home runs per season."
  },
  {
    "objectID": "posts/coefficient_of_variation.html#a-walk-through-the-data",
    "href": "posts/coefficient_of_variation.html#a-walk-through-the-data",
    "title": "Coefficient of Variation",
    "section": "A Walk Through the Data",
    "text": "A Walk Through the Data\nThe Lahman database contains a lot of baseball statistics, and today I will focus on the Batting data frame.\n\nlibrary(\"Lahman\")\nlibrary(\"tidyverse\")\n\nFor interest, I will filter the observations to retain the players from the past 18 seasons (since my students are about 18 years old, haha) and player-seasons that included at least 100 at-bats.\n\ndf <- Batting |>\n  filter(yearID >= (2021 - 18)) |>\n  filter(AB >= 100)\n\nTo be illustrative, permit me to select mainly the seasons and home run columns.\n\ndf <- df |>\n  select(playerID, yearID, AB, HR)\n\nAt the moment, here is what our data looks like.\n\nhead(df)\n\n   playerID yearID  AB HR\n1 abreubo01   2003 577 20\n2 alfoned01   2003 514 13\n3 almoner01   2003 100  1\n4 alomaro01   2003 263  2\n5 alomaro01   2003 253  3\n6 alomasa02   2003 194  5\n\n\nSince I am concerned with season averages, I am going to group_by the player name. From there, let us then compute the averages and standard deviations for home runs.\n\ndf <- df |>\n  group_by(playerID) |>\n  mutate(xbar = mean(HR, na.rm = TRUE),\n         s    = sd(HR, na.rm = TRUE)) |>\n  ungroup()\nhead(df)\n\n# A tibble: 6 × 6\n  playerID  yearID    AB    HR  xbar      s\n  <chr>      <int> <int> <int> <dbl>  <dbl>\n1 abreubo01   2003   577    20 14.3   8.94 \n2 alfoned01   2003   514    13  8.67  5.86 \n3 almoner01   2003   100     1  1    NA    \n4 alomaro01   2003   263     2  2.67  0.577\n5 alomaro01   2003   253     3  2.67  0.577\n6 alomasa02   2003   194     5  2.33  2.52 \n\n\nFor various reasons, some players only appear once in this subset of data, so their variance is effectively zero (missing in the computation). To answer my original inquiry mathematically, I will now compute the coefficient of variation (and avoid a divide-by-zero error from those players who hit zero home runs).\n\\[CoV = \\frac{s}{\\bar{x}}\\]\n\ndf <- df |>\n  # filter(!is.na(s)) |>\n  filter(xbar > 0) |>\n  mutate(CoV = s/xbar) |>\n  arrange(desc(CoV))\n\nIn this metric, the top scores are\n\nhead(df)\n\n# A tibble: 6 × 7\n  playerID  yearID    AB    HR  xbar     s   CoV\n  <chr>      <int> <int> <int> <dbl> <dbl> <dbl>\n1 gathrjo01   2005   203     0  0.2  0.447  2.24\n2 gathrjo01   2006   154     0  0.2  0.447  2.24\n3 gathrjo01   2006   229     1  0.2  0.447  2.24\n4 gathrjo01   2007   228     0  0.2  0.447  2.24\n5 gathrjo01   2008   279     0  0.2  0.447  2.24\n6 burriem01   2008   240     1  0.25 0.5    2   \n\n\nand the bottom scores are\n\ntail(df)\n\n# A tibble: 6 × 7\n  playerID  yearID    AB    HR  xbar     s   CoV\n  <chr>      <int> <int> <int> <dbl> <dbl> <dbl>\n1 wadela01    2021   336    18    18    NA    NA\n2 wallsta01   2021   152     1     1    NA    NA\n3 walshja01   2021   530    29    29    NA    NA\n4 whiteel04   2021   198     6     6    NA    NA\n5 williju02   2021   119     4     4    NA    NA\n6 wisdopa01   2021   338    28    28    NA    NA"
  },
  {
    "objectID": "posts/coefficient_of_variation.html#heavy-hitters",
    "href": "posts/coefficient_of_variation.html#heavy-hitters",
    "title": "Coefficient of Variation",
    "section": "Heavy Hitters",
    "text": "Heavy Hitters\nSo far, these results seem to be fine mathematically, but they might be uninteresting to the casual baseball fan. To further prune down to recognizable players, let me further filter the data down to players with at least 5 of these 100+ at-bat seasons in the past 18 seasons—and had an average of over 10 home runs per season.\n\ndf <- df |>\n  group_by(playerID) |>\n  mutate(seasons = n()) |>\n  ungroup() |>\n  filter(seasons >= 5) |>\n  filter(xbar >= 5) |>\n  arrange(desc(CoV))\n\nNow, the top scores in using the coefficient of variation as my metric are\n\nhead(df)\n\n# A tibble: 6 × 8\n  playerID  yearID    AB    HR  xbar     s   CoV seasons\n  <chr>      <int> <int> <int> <dbl> <dbl> <dbl>   <int>\n1 santada01   2014   405     7   7.5  10.3  1.38       6\n2 santada01   2015   261     0   7.5  10.3  1.38       6\n3 santada01   2016   233     2   7.5  10.3  1.38       6\n4 santada01   2017   143     3   7.5  10.3  1.38       6\n5 santada01   2019   474    28   7.5  10.3  1.38       6\n6 santada01   2021   116     5   7.5  10.3  1.38       6\n\n\nand the lowest \\(Cov\\) are\n\ntail(df)\n\n# A tibble: 6 × 8\n  playerID  yearID    AB    HR  xbar     s   CoV seasons\n  <chr>      <int> <int> <int> <dbl> <dbl> <dbl>   <int>\n1 delgaca01   2003   570    42  34.5  6.32 0.183       6\n2 delgaca01   2004   458    32  34.5  6.32 0.183       6\n3 delgaca01   2005   521    33  34.5  6.32 0.183       6\n4 delgaca01   2006   524    38  34.5  6.32 0.183       6\n5 delgaca01   2007   538    24  34.5  6.32 0.183       6\n6 delgaca01   2008   598    38  34.5  6.32 0.183       6\n\n\nWell, I do recognize more of the player names, but I realize that the \\(Cov\\) alone does not completely solve my question since I still wanted similar averages between two players."
  },
  {
    "objectID": "posts/coefficient_of_variation.html#a-metric-on-top-of-a-metric",
    "href": "posts/coefficient_of_variation.html#a-metric-on-top-of-a-metric",
    "title": "Coefficient of Variation",
    "section": "A Metric on top of a Metric",
    "text": "A Metric on top of a Metric\nNow, hear me out. If there are two players \\(A\\) and \\(B\\), then what I am looking for is a rate of change of the form\n\\[Y = \\frac{\\text{CoV}_{A} - \\text{CoV}_{B}}{\\bar{x}_{A} - \\bar{x}_{B}}\\]"
  },
  {
    "objectID": "posts/cofficient_of_variation/coefficient_of_variation.html",
    "href": "posts/cofficient_of_variation/coefficient_of_variation.html",
    "title": "Coefficient of Variation",
    "section": "",
    "text": "For a future lecture in my Sports Analytics course, I want an example of a baseball statistic where the averages for two players are similar, but their variances in that same statistic are quite different. It is still early in the semester, so I am looking for an easy-to-understand statistic. Therefore, I will explore home runs per season."
  },
  {
    "objectID": "posts/cofficient_of_variation/coefficient_of_variation.html#a-walk-through-the-data",
    "href": "posts/cofficient_of_variation/coefficient_of_variation.html#a-walk-through-the-data",
    "title": "Coefficient of Variation",
    "section": "A Walk Through the Data",
    "text": "A Walk Through the Data\nThe Lahman database contains a lot of baseball statistics, and today I will focus on the Batting data frame.\n\nlibrary(\"Lahman\")\nlibrary(\"tidyverse\")\n\nFor interest, I will filter the observations to retain the players from the past 18 seasons (since my students are about 18 years old, haha) and player-seasons that included at least 100 at-bats.\n\ndf <- Batting |>\n  filter(yearID >= (2021 - 18)) |>\n  filter(AB >= 100)\n\nTo be illustrative, permit me to select mainly the seasons and home run columns.\n\ndf <- df |>\n  select(playerID, yearID, AB, HR)\n\nAt the moment, here is what our data looks like.\n\nhead(df)\n\n   playerID yearID  AB HR\n1 abreubo01   2003 577 20\n2 alfoned01   2003 514 13\n3 almoner01   2003 100  1\n4 alomaro01   2003 263  2\n5 alomaro01   2003 253  3\n6 alomasa02   2003 194  5\n\n\nSince I am concerned with season averages, I am going to group_by the player name. From there, let us then compute the averages and standard deviations for home runs.\n\ndf <- df |>\n  group_by(playerID) |>\n  mutate(xbar = mean(HR, na.rm = TRUE),\n         s    = sd(HR, na.rm = TRUE)) |>\n  ungroup()\nhead(df)\n\n# A tibble: 6 × 6\n  playerID  yearID    AB    HR  xbar      s\n  <chr>      <int> <int> <int> <dbl>  <dbl>\n1 abreubo01   2003   577    20 14.3   8.94 \n2 alfoned01   2003   514    13  8.67  5.86 \n3 almoner01   2003   100     1  1    NA    \n4 alomaro01   2003   263     2  2.67  0.577\n5 alomaro01   2003   253     3  2.67  0.577\n6 alomasa02   2003   194     5  2.33  2.52 \n\n\nFor various reasons, some players only appear once in this subset of data, so their variance is effectively zero (missing in the computation). To answer my original inquiry mathematically, I will now compute the coefficient of variation (and avoid a divide-by-zero error from those players who hit zero home runs).\n\\[CoV = \\frac{s}{\\bar{x}}\\]\n\ndf <- df |>\n  # filter(!is.na(s)) |>\n  filter(xbar > 0) |>\n  mutate(CoV = s/xbar) |>\n  arrange(desc(CoV))\n\nIn this metric, the top scores are\n\nhead(df)\n\n# A tibble: 6 × 7\n  playerID  yearID    AB    HR  xbar     s   CoV\n  <chr>      <int> <int> <int> <dbl> <dbl> <dbl>\n1 gathrjo01   2005   203     0  0.2  0.447  2.24\n2 gathrjo01   2006   154     0  0.2  0.447  2.24\n3 gathrjo01   2006   229     1  0.2  0.447  2.24\n4 gathrjo01   2007   228     0  0.2  0.447  2.24\n5 gathrjo01   2008   279     0  0.2  0.447  2.24\n6 burriem01   2008   240     1  0.25 0.5    2   \n\n\nand the bottom scores are\n\ntail(df)\n\n# A tibble: 6 × 7\n  playerID  yearID    AB    HR  xbar     s   CoV\n  <chr>      <int> <int> <int> <dbl> <dbl> <dbl>\n1 wadela01    2021   336    18    18    NA    NA\n2 wallsta01   2021   152     1     1    NA    NA\n3 walshja01   2021   530    29    29    NA    NA\n4 whiteel04   2021   198     6     6    NA    NA\n5 williju02   2021   119     4     4    NA    NA\n6 wisdopa01   2021   338    28    28    NA    NA"
  },
  {
    "objectID": "posts/cofficient_of_variation/coefficient_of_variation.html#heavy-hitters",
    "href": "posts/cofficient_of_variation/coefficient_of_variation.html#heavy-hitters",
    "title": "Coefficient of Variation",
    "section": "Heavy Hitters",
    "text": "Heavy Hitters\nSo far, these results seem to be fine mathematically, but they might be uninteresting to the casual baseball fan. To further prune down to recognizable players, let me further filter the data down to players with at least 5 of these 100+ at-bat seasons in the past 18 seasons—and had an average of over 10 home runs per season.\n\ndf <- df |>\n  group_by(playerID) |>\n  mutate(seasons = n()) |>\n  ungroup() |>\n  filter(seasons >= 5) |>\n  filter(xbar >= 15) |>\n  arrange(desc(CoV))\n\nNow, the top scores in using the coefficient of variation as my metric are\n\nhead(df)\n\n# A tibble: 6 × 8\n  playerID  yearID    AB    HR  xbar     s   CoV seasons\n  <chr>      <int> <int> <int> <dbl> <dbl> <dbl>   <int>\n1 solerjo01   2015   366    10  16.3  14.2 0.869       7\n2 solerjo01   2016   227    12  16.3  14.2 0.869       7\n3 solerjo01   2018   223     9  16.3  14.2 0.869       7\n4 solerjo01   2019   589    48  16.3  14.2 0.869       7\n5 solerjo01   2020   149     8  16.3  14.2 0.869       7\n6 solerjo01   2021   308    13  16.3  14.2 0.869       7\n\n\nand the lowest \\(Cov\\) are\n\ntail(df)\n\n# A tibble: 6 × 8\n  playerID  yearID    AB    HR  xbar     s   CoV seasons\n  <chr>      <int> <int> <int> <dbl> <dbl> <dbl>   <int>\n1 delgaca01   2003   570    42  34.5  6.32 0.183       6\n2 delgaca01   2004   458    32  34.5  6.32 0.183       6\n3 delgaca01   2005   521    33  34.5  6.32 0.183       6\n4 delgaca01   2006   524    38  34.5  6.32 0.183       6\n5 delgaca01   2007   538    24  34.5  6.32 0.183       6\n6 delgaca01   2008   598    38  34.5  6.32 0.183       6\n\n\nWell, I do recognize more of the player names, but I realize that the \\(Cov\\) alone does not completely solve my question since I still wanted similar averages between two players."
  },
  {
    "objectID": "posts/cofficient_of_variation/coefficient_of_variation.html#a-metric-on-top-of-a-metric",
    "href": "posts/cofficient_of_variation/coefficient_of_variation.html#a-metric-on-top-of-a-metric",
    "title": "Coefficient of Variation",
    "section": "A Metric on top of a Metric",
    "text": "A Metric on top of a Metric\nNow, hear me out. If there are two players \\(A\\) and \\(B\\), then what I am looking for is a rate of change of the form\n\\[Y = \\bigg|\\frac{s_{A} - s_{B}}{\\bar{x}_{A} - \\bar{x}_{B}}\\bigg|\\]\nFirst, let me simplify the data frame down to just the player names, home run averages, and their standard deviations.\n\ndf2 <- df |>\n  select(playerID, xbar, s) |>\n  distinct()\nhead(df2)\n\n# A tibble: 6 × 3\n  playerID   xbar     s\n  <chr>     <dbl> <dbl>\n1 solerjo01  16.3  14.2\n2 valenjo03  16.2  13.3\n3 muncyma01  20.5  16.6\n4 yelicch01  17.8  13.8\n5 moralke01  16.1  11.7\n6 carpema01  15.5  11.1\n\n\nPresently, I have about 221 observations, so a pair-wise calculations would be computed over about 4.8841^{4} pairs (hopefully manageable by a computer).\n\nN <- nrow(df2)\ndf3 <- data.frame(player1 = rep(NA, N^2),\n                  player2 = rep(NA, N^2),\n                  Y       = rep(NA, N^2))\n\nfor(i in 1:N){\n  for(j in 1:N){\n    row_number = j*(i-1) + j\n    df3$player1[row_number] <- df2$playerID[i]\n    df3$player2[row_number] <- df2$playerID[j]\n    \n    if(i == j){\n      this_Y_value <- 0\n    } else {\n      denominator <- df2$xbar[i] - df2$xbar[j]\n      if(denominator == 0){ denominator <- 0.1 }\n      \n      this_Y_value <- abs((df2$s[i] - df2$s[j]) / denominator)\n    }\n    \n    df3$Y[row_number] <- this_Y_value\n  }\n  \n  # if((row_number %% 10000) == 0){\n  #   print(paste(\"Currently computing row number\", row_number))\n  # }\n}\n\nIn this improvised metric, the top 10 scores were\n\ndf3 |>\n  arrange(desc(Y)) |>\n  top_n(10)\n\nSelecting by Y\n\n\n     player1   player2        Y\n1  mccutan01 ramirjo01 692.3109\n2  polloaj01 utleych01 348.8826\n3  mccutan01 ensbemo01 291.9631\n4  hosmeer01 quentca01 244.8742\n5  mccanbr01  belljo02 209.0920\n6  jacobmi02   bayja01 198.8301\n7   kentje01 giambja01 190.9222\n8  jonesga02 kinslia01 182.2589\n9  contrwi01  shawtr01 180.9609\n10 polloaj01 morrilo01 179.5927\n\n\nUsing the playerInfo() helper function in the Lahman package, we can verify the names of the players.\n\nplayerInfo(\"mccutan01\")\n\n       playerID nameFirst  nameLast\n11832 mccutan01    Andrew McCutchen\n\nplayerInfo(\"ramirjo01\")\n\n       playerID nameFirst nameLast\n14966 ramirjo01      Jose  Ramirez"
  },
  {
    "objectID": "posts/cofficient_of_variation/coefficient_of_variation.html#data-visualization",
    "href": "posts/cofficient_of_variation/coefficient_of_variation.html#data-visualization",
    "title": "Coefficient of Variation",
    "section": "Data Visualization",
    "text": "Data Visualization\nThis whole time, I was hoping for a neat boxplot.\n\ndf |>\n  filter(playerID == \"mccutan01\" | playerID == \"ramirjo01\") |>\n  ggplot(aes(x = playerID, y = HR)) +\n  geom_boxplot(color = c(\"#27251F\", \"#00385D\"),\n               fill = c(\"#FDB827\", \"#E50022\")) +\n  stat_summary(fun=mean, geom=\"point\", shape=20, size=14, color=\"blue\", fill=\"blue\") +\n  scale_x_discrete(labels = c(\"Andrew McCutchen\", \"Jose Ramirez\")) +\n  labs(title = \"Similar Means, Different Variances\",\n       subtitle = stringr::str_wrap(\"Andrew McCutchen and Jose Ramirez have averaged about 20.4 home runs per season, but in different ways (Qualifiers: after 2002 season, 100+ AB seasons, at least 5 100+ AB seasons, home run average over 15 HR/season)\"),\n       caption = \"Derek Sollberger, 2022-09-02\",\n       x = \"MLB Player\",\n       y = \"home runs in a season\") +\n  theme(axis.text.x = element_text(size = 15),\n        legend.position = \"none\",\n        panel.background = element_blank(),\n        plot.background = element_rect(\n            fill = \"#FFFFFF\", \n            color = \"#27251F\"\n        ),\n        plot.title = element_text(color = \"#E50022\", size = 20, hjust = 0.5),\n        plot.title.position = \"plot\",\n        plot.subtitle = element_text(color = \"blue\", size = 12, hjust = 0.0),\n        plot.caption = element_text(color = \"#092C5C\", size = 10, hjust = 1.0),\n        plot.caption.position = \"plot\",\n        plot.margin = margin(20, 20, 20, 20))"
  },
  {
    "objectID": "posts/Settlement_Survival/Settlement_Survival.html",
    "href": "posts/Settlement_Survival/Settlement_Survival.html",
    "title": "Settlement Survival Start",
    "section": "",
    "text": "library(\"DiagrammeR\")\n\nI am going to take some liberties and actually add more prerequisites in the beginning (otherwise, the graph simply starts with about 12 unlinked nodes).\n\nmy_plot <- DiagrammeR::mermaid(\"\n  graph TD\n  start[Select Location]\n  \n  house1[1 House]\n  farms[2 Standard Fields]\n  water[Big Well]\n  forest_hut[Forester's Hut]\n  gather_hut[Gatherer's Hut]\n  hunter_hut[Hunter's Hut]\n  chopping_house[Chopping House]\n  house7[7 Houses]\n  repair_shop[Repair Shop]\n  church[Church]\n  clinic[Clinic]\n  distillery[Distillery]\n  \n  start --> house1\n  start --> farms\n  start --> water\n  start --> gather_hut\n  \n  house1 --> house7\n  farms --> clinic\n  gather_hut --> forest_hut\n  gather_hut --> hunter_hut\n  water --> repair_shop\n  \n  forest_hut --> chopping_house\n  \n  house7 --> church\n  repair_shop --> distillery\n\")\n\n\n# print\nmy_plot"
  }
]