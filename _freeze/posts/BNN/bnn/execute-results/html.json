{
  "hash": "937d726a6b2804b9cb84cde8ec31bd93",
  "result": {
    "markdown": "---\ntitle: \"Bayesian Neural Networks\"\nauthor: \"Derek Sollberger\"\ndate: \"2024-03-17\"\nformat: html\n---\n\n\nOver the next few weeks, I want to learn more about **Bayesian Neural Networks**.  Here in this blog post, I will gather resources and examples.\n\n# Causal Impact\n\nI have seen several people mention (on Twitter or Slack) the `CausalImpact`\npackage.  Here, I roughly follow the [vignette](https://cran.r-project.org/web/packages/CausalImpact/vignettes/CausalImpact.html).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"CausalImpact\")\nlibrary(\"tidyverse\")\n```\n:::\n\n\n## Toy Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(320)\n\n# create time series and apply vertical shift\nts_raw <- 100 + arima.sim(model = list(ar = 0.999), n = 100)\n\n# add \"noise\"\ny <- 1.2*ts_raw + rnorm(100) \n\n# intentionlly \"break\" time series and lift a part\ny[71:100] <- y[71:100] + 25\n\nx <- 1:100\ndf <- data.frame(x,y)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  ggplot(aes(x,y)) +\n  geom_vline(xintercept = 70, color = \"gray50\", \n             linetype = 2, linewidth = 3) +\n  geom_line(color = \"red\", linewidth = 2) +\n  labs(title = \"Time Series\",\n       subtitle = \"with an induced discontinuity\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](bnn_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## Bayesian Analysis\n\n* training over *pre-intervention period*\n* testing over *post-intervention period*\n* the `CausalImpact` function\n\n    * assembles structural time-series model\n    * performs posterior inference\n    * computes estimates for casual effect\n    \n\n::: {.cell}\n\n```{.r .cell-code}\npre_intervention  <- c(1,70)\npost_intervention <- c(71, 100)\nts_impact <- CausalImpact::CausalImpact(df,\n                                        pre_intervention,\n                                        post_intervention)\n```\n:::\n\n\n### Model Statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(ts_impact)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nPosterior inference {CausalImpact}\n\n                         Average        Cumulative  \nActual                   86             2565        \nPrediction (s.d.)        103 (3.8)      3100 (115.3)\n95% CI                   [96, 111]      [2882, 3326]\n                                                    \nAbsolute effect (s.d.)   -18 (3.8)      -535 (115.3)\n95% CI                   [-25, -11]     [-761, -317]\n                                                    \nRelative effect (s.d.)   -17% (3.1%)    -17% (3.1%) \n95% CI                   [-23%, -11%]   [-23%, -11%]\n\nPosterior tail-area probability p:   0.00106\nPosterior prob. of a causal effect:  99.89418%\n\nFor more details, type: summary(impact, \"report\")\n```\n:::\n:::\n\n\n### Visualization\n\nThe `plot` of an \"impact\" object returns a `ggplot` object!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ts_impact)\n```\n\n::: {.cell-output-display}\n![](bnn_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n# bsts\n\n## Bayesian structural time series\n\n* looking at the first example on [this blog post](https://www.unofficialgoogledatascience.com/2017/07/fitting-bayesian-structural-time-series.html)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"bsts\")\ndata(iclaims) #unemployment data\n```\n:::\n\n\n## Trend and Seasonal Components\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstate_specs <- \n  bsts::AddSemilocalLinearTrend(list(),\n                                initial.claims$iclaimsNSA)\nstate_specs <- bsts::AddSeasonal(state_specs,\n                                 initial.claims$iclaimsNSA,\n                                 nseasons = 52)\n```\n:::\n\n\n## Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_1 <- bsts::bsts(initial.claims$iclaimsNSA,\n                      state.specification = state_specs,\n                      niter = 100)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n=-=-=-=-= Iteration 0 Tue Mar 19 23:21:31 2024\n =-=-=-=-=\n=-=-=-=-= Iteration 10 Tue Mar 19 23:21:31 2024\n =-=-=-=-=\n=-=-=-=-= Iteration 20 Tue Mar 19 23:21:31 2024\n =-=-=-=-=\n=-=-=-=-= Iteration 30 Tue Mar 19 23:21:32 2024\n =-=-=-=-=\n=-=-=-=-= Iteration 40 Tue Mar 19 23:21:32 2024\n =-=-=-=-=\n=-=-=-=-= Iteration 50 Tue Mar 19 23:21:32 2024\n =-=-=-=-=\n=-=-=-=-= Iteration 60 Tue Mar 19 23:21:32 2024\n =-=-=-=-=\n=-=-=-=-= Iteration 70 Tue Mar 19 23:21:33 2024\n =-=-=-=-=\n=-=-=-=-= Iteration 80 Tue Mar 19 23:21:33 2024\n =-=-=-=-=\n=-=-=-=-= Iteration 90 Tue Mar 19 23:21:33 2024\n =-=-=-=-=\n```\n:::\n:::\n\n\n## Visualization\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(model_1)\n```\n\n::: {.cell-output-display}\n![](bnn_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## Prediction\n\n* predict next 12 time points\n* along last 156 time points (3 years)\n\n\n::: {.cell}\n\n```{.r .cell-code}\npred_3y <- predict(model_1, horizon = 12)\nplot(pred_3y, plot.original = 156)\n```\n\n::: {.cell-output-display}\n![](bnn_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n# Online Videos\n\n* [Bayesian Neural Network](https://www.youtube.com/watch?v=OVne8jDKGUI) by TwinEd Productions (7 minute video)",
    "supporting": [
      "bnn_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}