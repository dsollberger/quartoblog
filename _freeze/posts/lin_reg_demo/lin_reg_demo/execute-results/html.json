{
  "hash": "c0ad5ea411e5867fcf2302c3aca305b2",
  "result": {
    "markdown": "---\ntitle: \"Linear Regression Demonstration\"\nauthor: \"Derek Sollberger\"\ndate: \"2023-08-23\"\nformat:\n  html:\n    theme: cerulean\n    toc: true\n\n---\n\n\n\\newcommand{\\ds}{\\displaystyle}\n\n\n# Warm-Up\n\n## On Predictions\n\nPredict how much moxillation takes place at 70 traxolline.\n\n![](traxolline.png)\n\n# Setting\n\n## Tidyverse\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"moderndive\") #for get_regression_table()\nlibrary(\"tidyverse\")\n\ndf_raw <- readr::read_csv(\"air_quality_demo_data.csv\")\n\n# brand colors\n# orange on white: #e77500\n# orange on black: #f58025\n```\n:::\n\n\n\n## Data\n\nThis data set can be seen at [aqicn.org](https://aqicn.org/station/@402871/#/z/12) and was accessed through the [PurpleAir](https://www2.purpleair.com/) API\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(df_raw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 6\n  time_stamp          humidity temperature pressure pm1.0_atm pm2.5_atm\n  <dttm>                 <dbl>       <dbl>    <dbl>     <dbl>     <dbl>\n1 2023-06-10 06:00:00     34.3        81.3    1004.     0.355      0.64\n2 2023-06-10 12:00:00     30.8        85.0    1003.     8.78      12.6 \n3 2023-06-10 18:00:00     26.9        88.6    1003.    18.2       26.7 \n4 2023-06-11 00:00:00     37.0        82.0    1005.    19.2       28.9 \n5 2023-06-11 06:00:00     49.7        73.6    1006.    27.9       43.0 \n6 2023-06-11 12:00:00     33.6        89.5    1006.    27.7       41.7 \n```\n:::\n:::\n\n\n* about 10 weeks of weather data, at 6-hour intervals ($n = 291$ observations)\n* query: Why do we record different types of particulate matter measurements?\n\n## Wrangling\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- df_raw |>\n  separate(time_stamp, into = c(\"date\", \"time\"), \n           remove = FALSE, sep = \" \") |>\n  mutate(time = ifelse(is.na(time), \"00:00:00\", time),\n         day_part = case_when(\n           time == \"06:00:00\" ~ \"morning\",\n           time == \"12:00:00\" ~ \"noon\",\n           time == \"18:00:00\" ~ \"evening\",\n           .default = \"midnight\"\n         )) |>\n  rename(pm1_0 = pm1.0_atm, pm2_5 = pm2.5_atm) |>\n  select(time, day_part, humidity, temperature, pm2_5)\n```\n:::\n\n\n* `separate` the time stamp into `date` and `time` columns\n* described parts of the day: morning, noon, evening, midnight\n* renamed particulate matter columns for ease\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  time     day_part humidity temperature pm2_5\n  <chr>    <chr>       <dbl>       <dbl> <dbl>\n1 06:00:00 morning      34.3        81.3  0.64\n2 12:00:00 noon         30.8        85.0 12.6 \n3 18:00:00 evening      26.9        88.6 26.7 \n4 00:00:00 midnight     37.0        82.0 28.9 \n5 06:00:00 morning      49.7        73.6 43.0 \n6 12:00:00 noon         33.6        89.5 41.7 \n```\n:::\n:::\n\n\n# Linear Regression\n\n::::: {.panel-tabset}\n\n## Setup\n\n* response variable ($Y$): particulate matter (2.5 microns)\n* predictor variable ($X_{1}$): temperature\t\n\n$$Y = a + b_{1}X_{1}$$\n\n* context: levels above 35 micrograms per cubic meter are considered unhealthy (according to the [Indoor Air Hygiene Institute](https://www.indoorairhygiene.org/pm2-5-explained/))\n\n## Graph\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lin_reg_demo_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  ggplot(aes(x = temperature, y = pm2_5)) +\n  geom_point() +\n  geom_hline(yintercept = 35, color = \"#e77500\",\n             linewidth = 3, linetype = 2) +\n  labs(title = \"Princeton Air Quality\",\n       subtitle = \"Summer 2023\",\n       caption = \"Source: PurpleAir\") +\n  theme_minimal()\n```\n:::\n\n\n:::::\n\n## Where Fit?\n\n![Where do we draw the line?](many_splits.gif)\n\n## Residuals\n\n:::: {.columns}\n\n::: {.column width=\"70%\"}\nGoal: Given a bivariate data set $\\{x_{i}, y_{i}\\}_{i=1}^{n}$, form a **linear regression model**\n\n$$\\hat{y} = a + bx$$\n\nthat ``best fits'' the data.  Note that such a line will not go through all of the data (except in linear, deterministic situations), so\n\n- denote $y_{i}$ for true outcomes\n- denote $\\hat{y}_{i}$ for estimates (or predictions)\n- then $y_{i} - \\hat{y}_{i}$ is the $i^{\\text{th}}$ *residual*\n:::\n\n::: {.column width=\"30%\"}\n![image credit: www.jmp.com](residuals.png)\n:::\n\n::::\n\n## Method of Least Squares\n\nLike our derivation of formulas for variance and standard deviation, scientists decided to square the residuals (focus on size of residuals, avoid positive versus negative signs).  Let the *total error* be\n\n$$E(a,b) = \\ds\\sum_{i = 1}^{n} (y_{i} - \\hat{y}_{i})^{2} = \\ds\\sum_{i = 1}^{n} (y_{i} - a - bx_{i})^{2} $$\n\n- The ``best-fit line'' minimizes the error.\n- To minimize the error, start by setting the partial derivatives equal to zero:\n\n$$\\ds\\frac{\\partial E}{\\partial a} = 0, \\quad \\ds\\frac{\\partial E}{\\partial b} = 0$$\nThankfully, the function $E(a,b)$ is an elliptical paraboloid, so there is a global minimum at the critical point, and that minimum is found where\n\n$$a = \\ds\\frac{ (\\sum y_{i})(\\sum x_{i}^{2}) - (\\sum x_{i})(\\sum x_{i}y_{i}) }{ n\\sum x_{i}^{2} - (\\sum x_{i})^{2} }, \\quad b = \\ds\\frac{ n\\sum x_{i}y_{i} - (\\sum x_{i})(\\sum y_{i}) }{ n\\sum x_{i}^{2} - (\\sum x_{i})^{2} }$$\n\n::: {.callout-note collapse=\"true\"}\n## Linear Regression Model (Another View) \n\nIf sample means $\\bar{x}$ and $\\bar{y}$, sample standard deviations $s_{x}$ and $s_{y}$, and correlation coefficient $r$ were previously computed, then the best-fit linear regression line $\\hat{y} = mx + b$ is computed with\n\n$$m = \\ds\\frac{ rs_{y} }{ s_{x} }, \\quad b = \\bar{y} - m\\bar{x}$$\n\n- If correlation $r > 0$, then the slope of the regression line is also positive\n- If correlation $r < 0$, then the slope of the regression line is also negative\n:::\n\n::: {.callout-warning collapse=\"true\"}\n## Outliers\nIn a scatterplot, an **outlier** is a point lying far away from the other data points.  Paired sample data may include one or more *influential points*, which are points that strongly affect the graph of the regression line.\n:::\n\n## ggplot\n\n::::: {.panel-tabset}\n\n## geom_smooth\n\nThe `geom_smooth` layer is a quick way to draw the linear regression graph in `ggplot`.\n\n## Graph\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lin_reg_demo_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell source-line-numbers='4'}\n\n```{.r .cell-code}\ndf |>\n  ggplot(aes(x = temperature, y = pm2_5)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", color = \"#e77500\", \n              linewidth = 3, se = FALSE) +\n  labs(title = \"Princeton Air Quality\",\n       subtitle = \"Summer 2023\",\n       caption = \"Source: PurpleAir\") +\n  theme_minimal()\n```\n:::\n\n\n:::::\n\n## Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel1 <- lm(pm2_5 ~ temperature, data = df)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = pm2_5 ~ temperature, data = df)\n\nCoefficients:\n(Intercept)  temperature  \n   -12.9066       0.3805  \n```\n:::\n:::\n\n\n* Interpretation: for every one-degree increase in temperature, the PM2.5 level increases by 0.3805\n\n\n## Prediction\n\n::::: {.panel-tabset}\n\n## Example\n\nPredict the PM2.5 level for a 78-degree day.\n\n## Predict\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredict(model1,\n        newdata = data.frame(temperature = 78))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       1 \n16.77266 \n```\n:::\n:::\n\n\n## Book\n\n![Seven Pillars of Statistical Wisdom](book1.png)\n\n## Activity\n\nThink about what is meant by linear regression.  Draw a large area for a graph ($x$- and $y$-axes, first quadrant only, you do not have to label the axes).  Come up with a scatterplot situation where performing linear regression and a subsequent prediction would be a *bad idea*.\n\n:::::\n\n# Multivariate Linear Regression\n\n::::: {.panel-tabset}\n\n## Setup\n\n* response variable ($Y$): particulate matter (2.5 microns)\n* predictor variables \n\n    - $X_{1}$: temperature\n    - $X_{2}$: humidity\n\n$$Y = a + b_{1}X_{1} + b_{2}X_{2}$$\n\n## Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel2 <- lm(pm2_5 ~ temperature + humidity,\n             data = df)\n```\n:::\n\n\n## Activity\n\nDescribe the regression coefficients for the two predictor variables (hint: rates of change).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoderndive::get_regression_table(model2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 7\n  term        estimate std_error statistic p_value lower_ci upper_ci\n  <chr>          <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl>\n1 intercept    -10.8      15.7      -0.684   0.495  -41.8     20.2  \n2 temperature    0.367     0.156     2.35    0.019    0.06     0.674\n3 humidity      -0.02      0.093    -0.214   0.831   -0.203    0.163\n```\n:::\n:::\n\n\n## Book\n\n![ModernDive](book2.png)\n\n## Example\n\nPredict the PM2.5 level for a 78-degree day where the humidity is 50 percent.\n\n## Predict\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredict(model2,\n        newdata = data.frame(temperature = 78,\n                             humidity = 50))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       1 \n16.86311 \n```\n:::\n:::\n\n\n:::::\n\n# Categorical Variables\n\n::::: {.panel-tabset}\n\n## Setup\n\n* response variable ($Y$): particulate matter (2.5 microns)\n* predictor variables \n\n    - $X_{1}$: temperature\n\n$$Y = a + b_{1}X_{1} + b_{3}X_{3} + b_{4}X_{4} + b_{5}X_{5}$$\n\n$$X_{3} = \\begin{cases} 1 & \\text{morning} \\\\ 0 & \\text{otherwise}\n\\end{cases}$$\n\n$$X_{4} = \\begin{cases} 1 & \\text{afternoon} \\\\ 0 & \\text{otherwise}\n\\end{cases}$$\n\n$$X_{5} = \\begin{cases} 1 & \\text{evening} \\\\ 0 & \\text{otherwise}\n\\end{cases}$$\n\n## Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel3 <- lm(pm2_5 ~ temperature + day_part,\n             data = df)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmoderndive::get_regression_table(model3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 7\n  term               estimate std_error statistic p_value lower_ci upper_ci\n  <chr>                 <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl>\n1 intercept            -42.8     16.8       -2.54   0.012  -76.0      -9.68\n2 temperature            0.68     0.184      3.69   0        0.317     1.04\n3 day_part: midnight     5.06     2.89       1.75   0.081   -0.628    10.7 \n4 day_part: morning      8.48     3.29       2.57   0.011    2.00     15.0 \n5 day_part: noon         4.19     2.68       1.56   0.12    -1.10      9.47\n```\n:::\n:::\n\n## Activity\n\n* Predict the PM2.5 level for a 60-degree morning.\n* Predict the PM2.5 level for a 75-degree evening.\n\n$$Y = -42.844 + 0.680X_{1} + 5.056X_{3} + 8.477X_{4} + 4.186X_{5}$$\n\n$$X_{3} = \\begin{cases} 1 & \\text{morning} \\\\ 0 & \\text{otherwise}\n\\end{cases}$$\n\n$$X_{4} = \\begin{cases} 1 & \\text{afternoon} \\\\ 0 & \\text{otherwise}\n\\end{cases}$$\n\n$$X_{5} = \\begin{cases} 1 & \\text{evening} \\\\ 0 & \\text{otherwise}\n\\end{cases}$$\n\n## Graph\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lin_reg_demo_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\ndf |>\n  group_by(day_part) |>\n  ggplot(aes(x = temperature, y = pm2_5,\n             color = day_part, group = day_part)) +\n  geom_point() +\n  geom_smooth(aes(color = day_part), method = \"lm\",\n              linewidth = 3, se = FALSE) +\n  labs(title = \"Princeton Air Quality\",\n       subtitle = \"Summer 2023\",\n       caption = \"Source: PurpleAir\") +\n  theme_minimal() +\n  ylim(0,50)\n```\n:::\n\n\n## Predict\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredict(model3,\n        newdata = data.frame(temperature = 60,\n                             day_part = \"morning\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       1 \n6.448983 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npredict(model3,\n        newdata = data.frame(temperature = 75,\n                             day_part = \"evening\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       1 \n8.176292 \n```\n:::\n:::\n\n\n:::::\n\n\n# Looking Ahead\n\n## To Consider\n\n* How do we know that the predictions are reliable?\n* How do we know which model to choose?\n* How do we know which variables to use?\n\n## More Metrics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_regression_table(model3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 7\n  term               estimate std_error statistic p_value lower_ci upper_ci\n  <chr>                 <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl>\n1 intercept            -42.8     16.8       -2.54   0.012  -76.0      -9.68\n2 temperature            0.68     0.184      3.69   0        0.317     1.04\n3 day_part: midnight     5.06     2.89       1.75   0.081   -0.628    10.7 \n4 day_part: morning      8.48     3.29       2.57   0.011    2.00     15.0 \n5 day_part: noon         4.19     2.68       1.56   0.12    -1.10      9.47\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nget_regression_summaries(model3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 9\n  r_squared adj_r_squared   mse  rmse sigma statistic p_value    df  nobs\n      <dbl>         <dbl> <dbl> <dbl> <dbl>     <dbl>   <dbl> <dbl> <dbl>\n1     0.046         0.033  235.  15.3  15.5      3.47   0.009     4   291\n```\n:::\n:::\n\n\n\n## Book\n\n![Bayes Rules!](book3.png)\n\n## Thanks!\n\n* Derek Sollberger\n* Lecturer of Data Science",
    "supporting": [
      "lin_reg_demo_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}