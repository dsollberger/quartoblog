{
  "hash": "5a9d8ffb24d6eccfeeac9ac210a1d7f9",
  "result": {
    "markdown": "# Spherical Geometries\n\n**Learning objectives:**\n\n* Consider geometries on a sphere\n\n![Triangle on a Globe](images/triangle_on_globe.png)\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"dplyr\")\nlibrary(\"ggplot2\")\nlibrary(\"maps\")\nlibrary(\"rnaturalearth\")\nlibrary(\"rnaturalearthdata\")\nlibrary(\"s2\")\nlibrary(\"sf\")\n\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.2.2 (2022-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19044)\n\nMatrix products: default\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] sf_1.0-12               s2_1.1.3                rnaturalearthdata_0.1.0\n[4] rnaturalearth_0.3.2     maps_3.4.1              ggplot2_3.4.2          \n[7] dplyr_1.1.2            \n\nloaded via a namespace (and not attached):\n [1] Rcpp_1.0.10        pillar_1.9.0       compiler_4.2.2     class_7.3-20      \n [5] tools_4.2.2        digest_0.6.31      lattice_0.20-45    jsonlite_1.8.4    \n [9] evaluate_0.21      lifecycle_1.0.3    tibble_3.2.1       gtable_0.3.3      \n[13] pkgconfig_2.0.3    rlang_1.1.0        cli_3.6.0          DBI_1.1.3         \n[17] rstudioapi_0.14    xfun_0.39          fastmap_1.1.1      e1071_1.7-13      \n[21] withr_2.5.0        httr_1.4.5         knitr_1.42         generics_0.1.3    \n[25] vctrs_0.6.1        htmlwidgets_1.6.2  classInt_0.4-9     grid_4.2.2        \n[29] tidyselect_1.2.0   glue_1.6.2         R6_2.5.1           fansi_1.0.4       \n[33] rmarkdown_2.21     sp_1.6-0           magrittr_2.0.3     units_0.8-2       \n[37] scales_1.2.1       htmltools_0.5.4    colorspace_2.1-0   KernSmooth_2.23-20\n[41] utf8_1.2.3         proxy_0.4-27       wk_0.7.3           munsell_0.5.0     \n```\n:::\n:::\n\n\n## Straight Lines\n\n> 1. How does the GeoJSON format (Butler et al. 2016) define “straight” lines between ellipsoidal coordinates (Section 3.1.1)? Using this definition of straight, how does LINESTRING(0 85,180 85) look like in an Arctic polar projection? How could this geometry be modified to have it cross the North Pole?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthis_linestring <- st_linestring(matrix(c(0, 85, 180, 85), ncol = 2),\n                                 dim = \"XY\")\nclass(this_linestring)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"XY\"         \"LINESTRING\" \"sfg\"       \n```\n:::\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nthis_linestring |>\n  ggplot() +\n  geom_sf(color = \"red\", linewidth = 3) +\n  labs(title = \"This Linestring\",\n       subtitle = \"Where is it?\",\n       caption = \"Spatial Data Science book club\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](04_spherical-geometries_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# https://stackoverflow.com/questions/58919102/map-arctic-subarctic-regions-in-ggplot2-with-lambert-conformal-conic-projection\nworld <- ne_countries(scale = \"medium\", returnclass = \"sf\")\nworld_cropped <- world |>\n  st_make_valid() |>\n  st_crop(xmin = -180.0, xmax = 180.0, ymin = 45.0, ymax = 90.0)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n```\n:::\n\n```{.r .cell-code}\n# st_sfc(this_linestring) <- st_crs(world_cropped)\n\n# this_linestring_sf <- st_sf(this_linestring, \n#                             st_sfc(this_linestring, crs = \"EPSG:3995\"))\n\nggplot(data = world_cropped) + \n  geom_sf() + \n  # geom_sf(data = this_linestring, color = 'red') +\n  coord_sf(crs = \n             \"+proj=lcc +lat_1=50 +lat_2=70 +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0\")\n```\n\n::: {.cell-output-display}\n![](04_spherical-geometries_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n## Ring Direction\n\nFor a typical polygon on $S^2$, how can you find out ring direction?\n\n* A convention here is to define the inside as the left (or right) side of the polygon boundary when traversing its points in sequence. Reversal of the node order then switches inside and outside.\n\n* Additional resource: [ESRI: Polygon page](http://esri.github.io/geometry-api-java/doc/Polygon.html)\n\n\n## Bounding Boxes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAntarctica_map <- map(fill = TRUE, plot = FALSE) |>\n  st_as_sf() |>\n  filter(ID == \"Antarctica\")\n\nAntarctica_map |> \n  ggplot() + \n  geom_sf() +\n  labs(title = \"Antarctica\", \n       subtitle = \"Think of the latitude\",\n       caption = \"Spatial Data Science book club\")\n```\n\n::: {.cell-output-display}\n![](04_spherical-geometries_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_bbox(Antarctica_map)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      xmin       ymin       xmax       ymax \n-180.00000  -85.19218  179.62032  -60.52090 \n```\n:::\n:::\n\n\nwhich clearly does not contain the region (ymin being -90 and xmax 180).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFiji_map <- map(fill = TRUE, plot = FALSE) |>\n  st_as_sf() |>\n  filter(ID == \"Fiji\")\n\nFiji_map |> \n  ggplot() + \n  geom_sf() +\n  labs(title = \"Fiji\", \n       subtitle = \"Think of the longitude\",\n       caption = \"Spatial Data Science book club\")\n```\n\n::: {.cell-output-display}\n![](04_spherical-geometries_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_bbox(Fiji_map)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      xmin       ymin       xmax       ymax \n-179.86734  -21.70586  180.17769  -12.47695 \n```\n:::\n:::\n\n\nseems to span most of the Earth\n\n\n### Spherical Coordinates\n\n\n::: {.cell}\n\n```{.r .cell-code}\ns2_bounds_cap(Antarctica_map)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  lng lat   angle\n1   0 -90 29.4791\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ns2_bounds_rect(Antarctica_map)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  lng_lo lat_lo lng_hi   lat_hi\n1   -180    -90    180 -60.5209\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ns2_bounds_rect(Fiji_map)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    lng_lo    lat_lo    lng_hi    lat_hi\n1 174.5872 -21.70586 -178.2511 -12.47695\n```\n:::\n:::\n\n\n\n## Validity\n\nMaps of Antarctica should probably display the South Pole. Do the following maps display the South Pole?\n\n### Planar (Ellipsoidal Coordinates)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# maps package\nm <- st_as_sf(map(fill=TRUE, plot=FALSE))\nAntarctica_map_A <- m[m$ID == \"Antarctica\", ]\nst_geometry(Antarctica_map_A) |>\n  ggplot() + \n  geom_sf() +\n  labs(title = \"Antarctica\", \n       subtitle = \"Think of the latitude\",\n       caption = \"Spatial Data Science book club\")\n```\n\n::: {.cell-output-display}\n![](04_spherical-geometries_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsf::st_is_valid(Antarctica_map_A)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Natural Earth package\nne <- ne_countries(returnclass = \"sf\")\nAntarctica_map_B <- ne[ne$region_un == \"Antarctica\", \"region_un\"]\nst_geometry(Antarctica_map_B) |>\n  ggplot() + \n  geom_sf() +\n  labs(title = \"Antarctica\", \n       subtitle = \"Think of the latitude\",\n       caption = \"Spatial Data Science book club\")\n```\n\n::: {.cell-output-display}\n![](04_spherical-geometries_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsf::st_is_valid(Antarctica_map_B)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\n### Spherical (Polar Stereographic Projection)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAntarctica_map_C <- st_geometry(Antarctica_map_A) |>\n  st_transform(3031)\nAntarctica_map_C |> \n  ggplot() + \n  geom_sf() +\n  labs(title = \"Antarctica\", \n       subtitle = \"Think of the latitude\",\n       caption = \"Spatial Data Science book club\")\n```\n\n::: {.cell-output-display}\n![](04_spherical-geometries_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsf::st_is_valid(Antarctica_map_C)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nAntarctica_map_D <- st_geometry(Antarctica_map_B) |>\n  st_transform(3031)\nAntarctica_map_D |> \n  ggplot() + \n  geom_sf() +\n  labs(title = \"Antarctica\", \n       subtitle = \"Think of the latitude\",\n       caption = \"Spatial Data Science book club\")\n```\n\n::: {.cell-output-display}\n![](04_spherical-geometries_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsf::st_is_valid(Antarctica_map_D)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\n## Meeting Videos {-}\n\n### Cohort 1 {-}\n\n<iframe src=\"https://www.youtube.com/embed/URL\" width=\"100%\" height=\"400px\" data-external=\"1\"></iframe>\n\n<details>\n<summary> Meeting chat log </summary>\n\n```\nLOG\n```\n</details>\n",
    "supporting": [
      "04_spherical-geometries_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}