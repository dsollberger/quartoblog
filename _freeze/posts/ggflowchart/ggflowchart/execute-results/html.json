{
  "hash": "a32a407e9c850e62fb927269267628bf",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"ggflowchart\"\nauthor: \"Derek Sollberger\"\ndate: \"2024-05-18\"\nformat: html\n---\n\n\nToday I explore the `ggflowchart` [package](https://nrennie.rbind.io/blog/introducing-ggflowchart/) (made by Dr Nicola Rennie).  For some data, the scenario comes from [The Planet Crafter](https://mijugames.com/pages/planetcrafter/presskit.html) video game.  Later in the game (minor spoiler), you can fire rockets into space to *deliver* and trade items for currency.  Before then, these items are *crafted* out of materials that are *gathered* on the planet.  The information comes from [The Planet Crafter wiki page](https://planet-crafter.fandom.com/wiki/Planet_Crafter_Wiki).  This blog post is not meant to be an accurate guide for gameplay; I took some liberties (and also did not indicate the quantities of the ingredients) in this quick exploration.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"ggflowchart\")\nlibrary(\"readxl\")\n```\n:::\n\n\n\n# Data\n\nI transcribed information for the nodes and edges into an Excel spreadsheet for typing convenience.\n\n:::: {.panel-tabset}\n\n## Loading\n\n\n::: {.cell}\n\n```{.r .cell-code}\nedge_df <- readxl::read_xlsx(\"planet_crafter_trade_goods.xlsx\", sheet = \"edges\")\nnode_df <- readxl::read_xlsx(\"planet_crafter_trade_goods.xlsx\", sheet = \"nodes\")\n```\n:::\n\n\n## Nodes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnode_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 47 × 2\n   name               stage\n   <chr>              <chr>\n 1 bacteria sample    craft\n 2 bioplastic nugget  craft\n 3 chocolate          craft\n 4 circuit board      craft\n 5 cookie             craft\n 6 fabric             craft\n 7 flour              craft\n 8 fusion energy cell craft\n 9 high quality food  craft\n10 iridium rod        craft\n# ℹ 37 more rows\n```\n\n\n:::\n:::\n\n\n## Edges\n\n\n::: {.cell}\n\n```{.r .cell-code}\nedge_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 40 × 2\n   from               to               \n   <chr>              <chr>            \n 1 algae              bacteria sample  \n 2 water bottle       bacteria sample  \n 3 mushroom           bioplastic nugget\n 4 silicon            bioplastic nugget\n 5 water bottle       bioplastic nugget\n 6 cocoa              chocolate        \n 7 aluminium          circuit board    \n 8 bioplastic nugget  circuit board    \n 9 iron               circuit board    \n10 nitrogen cartridge circuit board    \n# ℹ 30 more rows\n```\n\n\n:::\n:::\n\n\n::::\n\n## Network\n\nNow let's see if the main `ggflowchart` function will work well with this situation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggflowchart::ggflowchart(edge_df, node_df, fill = stage)\n```\n\n::: {.cell-output-display}\n![](ggflowchart_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\nThe code package did the job as prescribed correctly and quickly, but I had presented a situation that was slightly complicated for a default graph.\n\n## Customization\n\nNext, we try to adjust the network presentation with some of the underlying tools in the `igraph` package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggflowchart(edge_df, node_df, fill = stage, horizontal = TRUE)\n```\n\n::: {.cell-output-display}\n![](ggflowchart_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nThis graph is more readable.  From here, one could explicity define where the nodes are (by x and y coordinates).\n\nIn the game's jargon, it might have made more sense to group the materials by tiers (\"T1\", \"T2\", \"T3\") and perhaps repeat nodes that are used in multiple crafting recipes.",
    "supporting": [
      "ggflowchart_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}