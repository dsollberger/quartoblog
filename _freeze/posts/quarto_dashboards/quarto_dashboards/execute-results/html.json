{
  "hash": "ec605fe1cffd408843923ad0cea842f4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Interactive Dashboards\"\nauthor: \"Derek Sollberger\"\ndate: \"2025-01-16\"\nformat:\n  html\n---\n\n\n\n# Interactive Dashboards\n\nIn this blog post, I want to outline my upcoming Princeton Wintersession workshop *Interactive Dashboards for Collaborative Communication*.  In this workshop, we will explore the new technology called [Quarto dashboards](https://quarto.org/docs/dashboards/). In this exploration, I have chosen a different data set per my interest, but much of the credit for the design of this workshop goes to the folks at Posit and other data scientists who have already created wonderful tutorials (see Additional Resources).\n\n## Dashboards\n\n* [Examples](https://quarto.org/docs/dashboards/#examples) from Posit\n\n## Why R?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"bslib\")\nlibrary(\"bsicons\")\nlibrary(\"sf\")\nlibrary(\"tidyverse\")\n\nbee_data <- readr::read_csv(\"bee_data.csv\")\nstates_shp <- readr::read_rds(\"us_states_shp.rds\")\n\ncolor_1 <- \"#E77500\"\ncolor_2 <- \"#121212\"\n```\n:::\n\n\n\n\n## Why Quarto?\n\n## Posit Cloud\n\n# Case Study: Bees!\n\n## Concern for Bee Populations\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n![Time](bee_news_1.png)\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n![ABC](bee_news_2.png)\n:::\n\n::::\n\n## Data Source\n\nOur data come from the Quick Stats at [USDA NASS](https://www.nass.usda.gov/) (United States Department of Agriculture National Agricultural Statistics Service).  Users can access a subset of the data through dropdown menus.  For replicability, I list my selections below:\n\n![USDA NASS Quick Stats](bee_search_criteria.png)\n\n* **Commodity:**\n\n    * **Program:** SURVEY\n    * **Sector:** ANIMALS & PRODUCTS\n    * **Group:** SPECIALTY\n    * **Commodity:** HONEY\n    * **Category:** INVENTORY\n    * **Data item:** HONEY, BEE COLONIES - INVENTORY, MEASURED IN COLONIES\n    \n* **Location:**\n\n    * **Geographic Level:** STATE\n    * **State:** [leave unselected for all states]\n    \n* **Time:**\n\n    * **Year:** [selected 2014 to 2024 to obtain about a decade of data]\n    * **Period Type:** ANNUAL (note: the \"annual\" measurements were done by each state, while other granularity might not be available for all states)\n    * **Period:** MARKETING YEAR\n\n## Bar Charts\n\n:::: {.panel-tabset}\n\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](quarto_dashboards_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbee_data |> \n  group_by(Year) |>\n  mutate(total_colonies = sum(Value)) |>\n  ungroup() |>\n  select(Year, total_colonies) |>\n  distinct() |>\n  mutate(num_colonies = total_colonies / 1e6) |>\n  ggplot(aes(x = factor(Year), y = num_colonies)) +\n  geom_bar(color = \"#121212\", fill = \"#E77500\",\n           stat = \"identity\") +\n  coord_cartesian(ylim = c(2.5,3.0)) +\n  labs(title = \"US Bee Population\",\n       subtitle = \"Survey of bee colonies\",\n       # caption = \"source: USDA NASS\",\n       x = \"year\",\n       y = \"bee colonies (in millions)\") +\n  theme_minimal()\n```\n:::\n\n\n\n## Each State\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](quarto_dashboards_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnj_plot <- bee_data |> \n  filter(State == \"NEW JERSEY\") |>\n  mutate(num_colonies = Value / 1e3) |>\n  ggplot(aes(x = factor(Year), y = num_colonies)) +\n  geom_bar(color = \"#121212\", fill = \"#E77500\",\n           stat = \"identity\") +\n  labs(title = \"NEW JERSEY\",\n       subtitle = \"Survey of bee colonies\",\n       caption = \"source: USDA NASS\",\n       x = \"year\",\n       y = \"bee colonies (in thousands)\") +\n  theme_minimal()\n\nnj_plot\n```\n:::\n\n\n\n## Facets\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](quarto_dashboards_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbee_data |>\n  filter(Year >= 2015 & Year <= 2019) |>\n  filter(State %in% c(\"CALIFORNIA\", \"NEW JERSEY\")) |>\n  ggplot(aes(x = Year, y = Value)) +\n  facet_wrap(vars(State), scales = \"free_y\") +\n  geom_bar(stat = \"identity\")\n```\n:::\n\n\n\n::::\n\n## Maps\n\n:::: {.panel-tabset}\n\n## Spatial Viz\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](quarto_dashboards_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstates_shp |>\n  mutate(this_selection = ifelse(NAME == \"New Jersey\", \n                               \"focus\", \"other states\")) |>\n  ggplot() +\n  geom_sf(aes(fill = this_selection)) +\n  labs(title = \"State Selection\", \n         subtitle = \"toward a Dashboard card\",\n         caption = \"Princeton Wintersession\") +\n  scale_fill_manual(values = c(color_1, \"gray80\")) +\n  theme_minimal()\n```\n:::\n\n\n\n## Each State\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](quarto_dashboards_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnj_map <- states_shp |>\n  mutate(this_selection = ifelse(NAME == \"New Jersey\", \n                               \"focus\", \"other states\")) |>\n  ggplot() +\n  geom_sf(aes(fill = this_selection)) +\n  labs(title = \"New Jersey\", \n         # subtitle = \"toward a Dashboard card\",\n         caption = \"Princeton Wintersession\") +\n  scale_fill_manual(values = c(color_1, \"gray80\")) +\n  theme_minimal() +\n  theme(axis.title.x = element_blank(),\n        axis.text.x  = element_blank(),\n        axis.ticks.x = element_blank(),\n        axis.title.y = element_blank(),\n        axis.text.y  = element_blank(),\n        axis.ticks.y = element_blank(),\n        legend.position = \"none\")\n\nnj_map\n```\n:::\n\n\n\n::::\n\n\n\n# Setup (YAML)\n\nIn a Posit Cloud session, create a new Quarto document, and then change the `format` to `dashboard`.\n\n```\n---\ntitle: \"My Dashboard\"\nformat: dashboard\n---\n\n# notebook content goes here...\n```\n\n\n# Layout\n\n## Cards\n\nEach additional visible object is arranged into the dashboard as a *card*.\n\n## Rows\n\nBy default, the arrangement of the cards is in rows.\n\n```\nnj_plot\n```\n\n```\nnj_map\n```\n\n## Columns\n\nTo change the arrangements into columns, change the YAML header\n\n```\nformat: \n  dashboard:\n    orientation: columns\n```\n\nMore specifically, our file will use \n\n* first-level headers (`#`) for tabs\n* second-level headers (`##`) for columns\n* third-level headers (`###`) for rows\n\n## Value Boxes\n\n```\n::: {.valuebox icon=\"award-fill\" color=\"#E77500\"}\nNEW JERSEY\n:::\n```\n\nOf importance, for a valuebox to appear and function as intended, the `R` code needs to output a value.\n\n\n## Sidebar\n\n```\n# {.sidebar}\n\nInstructions to user goes here\n```\n\n\n## Heights and Widths\n\nAt the desired header, use commands like\n\n* `{height = \"25%\"}`\n* `{width = \"30%\"}`\n\n\n\n\n# Interactivity\n\n## Inputs\n\nLet the user pick the state. Place the following code into the sidebar.\n\n```\nselectInput(\n  \"state_choice\",\n  \"Choose a state:\",\n  choices = unique(bee_data$State)\n)\n```\n\nLet the user pick the year.  Place the following code into the sidebar.\n\n```\nsliderInput(\n  \"year_choice\", \"Choose a year:\",\n  min = 2015, max = 2023, step = 1, \n  value = 2023,\n)\n```\n\n## Server\n\nNow, we need use the `shiny` framework to perform these computations in a *reactive* way.  Create the following code chunk, and be sure to set `#| context: server`.\n\n```\n#| context: server\noutput$state_plot <- renderPlot({\n  bee_data |> \n  filter(State == input$state_choice) |>\n  mutate(num_colonies = Value / 1e3) |>\n  mutate(year_color = ifelse(Year == input$year_choice,\n         TRUE, FALSE)) |>\n  ggplot(aes(x = factor(Year), y = num_colonies)) +\n  geom_bar(aes(fill = year_color),\n           color = \"#121212\", ,\n           stat = \"identity\") +\n  labs(title = paste0(str_to_title(input$state_choice)),\n       subtitle = \"Survey of bee colonies\",\n       caption = \"source: USDA NASS\",\n       x = \"year\",\n       y = \"bee colonies (in thousands)\") +\n  scale_fill_manual(values = c(\"#121212\", \"#E77500\")) +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n})\n\noutput$state_map <- renderPlot({\n  states_shp |>\n    mutate(this_selection = ifelse(\n      NAME == str_to_title(input$state_choice),\n      \"focus\", \"other states\")) |>\n    ggplot() +\n    geom_sf(aes(fill = this_selection)) +\n    labs(title = paste0(str_to_title(input$state_choice)),\n         caption = \"Princeton Wintersession\") +\n    scale_fill_manual(values = c(color_1, \"gray80\")) +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.text.x  = element_blank(),\n          axis.ticks.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.y  = element_blank(),\n          axis.ticks.y = element_blank(),\n          legend.position = \"none\")\n})\n\noutput$num_colonies <- renderText({\n  bee_data |>\n    filter(State == input$state_choice) |>\n    filter(Year == input$year_choice) |>\n    pull(Value)\n})\n\noutput$state_choice <- renderText({input$state_choice})\noutput$year_choice <- renderText({input$year_choice})\n```\n\n## Plots\n\nNow we have have the `output` in place, we can use more `shiny` code to plot that output. Where the barchart code was intended to be, place the following\n\n```\nplotOutput(\"state_plot\")\n```\n\nDo something similar for the geographic map.\n\n## Valueboxes\n\nNow we have have the `output` in place, we can use more `shiny` code to display  certain numbers. Inside the valueboxes' divs, place the following\n\n```\nr textOutput(\"state_choice\")\n```\n\n```\nr textOutput(\"year_choice\")\n```\n\nDo something similar for the number of bee colonies.\n\n\n\n\n\n\n\n\n\n\n    \n# Additional Resources\n\nFor this workshop, I followed the materials presented by Mine Cetinkaya-Rundel and Posit\n\n* [Part 1](https://www.youtube.com/watch?v=HW7QbqI4fH0)\n* [Part 2](https://www.youtube.com/watch?v=KdsQgwaY950)\n* [Part 3](https://www.youtube.com/watch?v=NigWSB-jG4Y)\n\nFolks that are interested in learning more about Quarto Dashboards can refer to resources such as the following:\n\n* How to [Automate](https://www.youtube.com/watch?v=xnJuXOw7iu8) your Reporting by Isabella Velasquez\n* [Easy Dashboards](https://www.youtube.com/watch?v=R3sNVE8TYeo) by The GRAPH Courses\n* Interactive Infographic using [DisplayR](https://www.youtube.com/watch?v=RXdcHCPJRg8) by Melisaa Van Bussel\n* [Quarto Dashboards](https://www.youtube.com/watch?v=jX4_Dnzhl0M) by Charles Teague\n* [Quarto Dashboards](https://www.youtube.com/watch?v=Kq1hgg2NtE4) by Isabella Velasquez\n* How to [Style](https://www.youtube.com/watch?v=jX4_Dnzhl0M) your Quarto docs without HTML & CSS by Albert Rapp\n\n* [Beyond Dashboards](https://www.youtube.com/watch?v=fzykFa6c3LI) by Sean Nguyen",
    "supporting": [
      "quarto_dashboards_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}